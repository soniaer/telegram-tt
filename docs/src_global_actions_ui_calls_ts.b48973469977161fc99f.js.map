{"version":3,"file":"src_global_actions_ui_calls_ts.b48973469977161fc99f.js","mappings":"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","sources":["webpack://telegram-t/./src/global/actions/api/chats.ts","webpack://telegram-t/./src/global/actions/ui/calls.ts","webpack://telegram-t/./src/global/reducers/calls.ts"],"sourcesContent":["import type {\n  ApiChat, ApiChatFolder, ApiChatlistExportedInvite,\n  ApiChatMember, ApiError, ApiMissingInvitedUser,\n} from '../../../api/types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType,\n  ChatListType, GlobalState, TabArgs,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport {\n  ChatCreationProgress,\n  ManagementProgress,\n  NewChatMembersProgress,\n  SettingsScreens,\n  type ThreadId,\n} from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVED_FOLDER_ID,\n  CHAT_LIST_LOAD_SLICE,\n  DEBUG,\n  GLOBAL_SUGGESTED_CHANNELS_ID,\n  RE_TG_LINK,\n  SAVED_FOLDER_ID,\n  SERVICE_NOTIFICATIONS_USER_ID,\n  TME_WEB_DOMAINS,\n  TMP_CHAT_ID,\n  TOP_CHAT_MESSAGES_PRELOAD_LIMIT,\n  TOPICS_SLICE,\n  TOPICS_SLICE_SECOND_LOAD,\n} from '../../../config';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatShareText, processDeepLink } from '../../../util/deeplink';\nimport { isDeepLink } from '../../../util/deepLinkParser';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { buildCollectionByKey, omit, pick } from '../../../util/iteratees';\nimport { isLocalMessageId } from '../../../util/keys/messageKey';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport { debounce, pause, throttle } from '../../../util/schedulers';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { callApi } from '../../../api/gramjs';\nimport {\n  getIsSavedDialog,\n  isChatArchived,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  toChannelId,\n} from '../../helpers';\nimport {\n  addActionHandler, getGlobal, setGlobal,\n} from '../../index';\nimport {\n  addChatListIds,\n  addChatMembers,\n  addChats,\n  addMessages,\n  addSimilarChannels,\n  addUsers,\n  addUserStatuses,\n  deleteChatMessages,\n  deletePeerPhoto,\n  deleteTopic,\n  leaveChat,\n  removeChatFromChatLists,\n  replaceChatFullInfo,\n  replaceChatListIds,\n  replaceChatListLoadingParameters,\n  replaceMessages,\n  replaceThreadParam,\n  replaceUserStatuses,\n  toggleSimilarChannels,\n  updateChat,\n  updateChatFullInfo,\n  updateChatLastMessageId,\n  updateChatListSecondaryInfo,\n  updateChats,\n  updateChatsLastMessageId,\n  updateListedTopicIds,\n  updateManagementProgress,\n  updateMissingInvitedUsers,\n  updatePeerFullInfo,\n  updateThread,\n  updateThreadInfo,\n  updateTopic,\n  updateTopics,\n  updateUser,\n  updateUsers,\n} from '../../reducers';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat,\n  selectChatByUsername,\n  selectChatFolder,\n  selectChatFullInfo,\n  selectChatLastMessageId,\n  selectChatListLoadingParameters,\n  selectChatListType,\n  selectChatMessages,\n  selectCurrentChat,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsChatPinned,\n  selectIsChatWithSelf,\n  selectLastServiceNotification,\n  selectPeer,\n  selectSimilarChannelIds,\n  selectStickerSet,\n  selectSupportChat,\n  selectTabState,\n  selectThread,\n  selectThreadInfo,\n  selectTopic,\n  selectTopics,\n  selectTopicsInfo,\n  selectUser,\n  selectUserByPhoneNumber,\n} from '../../selectors';\nimport { selectGroupCall } from '../../selectors/calls';\nimport { selectCurrentLimit } from '../../selectors/limits';\n\nconst TOP_CHAT_MESSAGES_PRELOAD_INTERVAL = 100;\nconst INFINITE_LOOP_MARKER = 100;\n\nconst CHATLIST_LIMIT_ERROR_LIST = new Set([\n  'FILTERS_TOO_MUCH',\n  'CHATLISTS_TOO_MUCH',\n  'INVITES_TOO_MUCH',\n]);\n\nconst runThrottledForLoadTopChats = throttle((cb) => cb(), 3000, true);\nconst runDebouncedForLoadFullChat = debounce((cb) => cb(), 500, false, true);\n\naddActionHandler('preloadTopChatMessages', async (global, actions): Promise<void> => {\n  const preloadedChatIds = new Set<string>();\n\n  for (let i = 0; i < TOP_CHAT_MESSAGES_PRELOAD_LIMIT; i++) {\n    await pause(TOP_CHAT_MESSAGES_PRELOAD_INTERVAL);\n\n    global = getGlobal();\n    const currentChatIds = Object.values(global.byTabId)\n      // eslint-disable-next-line @typescript-eslint/no-loop-func\n      .map(({ id: tabId }) => selectCurrentMessageList(global, tabId)?.chatId)\n      .filter(Boolean);\n\n    const folderAllOrderedIds = getOrderedIds(ALL_FOLDER_ID);\n    const nextChatId = folderAllOrderedIds?.find((id) => !currentChatIds.includes(id) && !preloadedChatIds.has(id));\n    if (!nextChatId) {\n      return;\n    }\n\n    preloadedChatIds.add(nextChatId);\n\n    actions.loadViewportMessages({ chatId: nextChatId, threadId: MAIN_THREAD_ID, tabId: getCurrentTabId() });\n  }\n});\n\nfunction abortChatRequests(chatId: string, threadId?: ThreadId) {\n  callApi('abortChatRequests', { chatId, threadId });\n}\n\nfunction abortChatRequestsForCurrentChat<T extends GlobalState>(\n  global: T, newChatId?: string, newThreadId?: ThreadId,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const currentMessageList = selectCurrentMessageList(global, tabId);\n  const currentChatId = currentMessageList?.chatId;\n  const currentThreadId = currentMessageList?.threadId;\n\n  if (currentChatId && (currentChatId !== newChatId || currentThreadId !== newThreadId)) {\n    const [isChatOpened, isThreadOpened] = Object.values(global.byTabId)\n      .reduce(([accHasChatOpened, accHasThreadOpened], { id: otherTabId }) => {\n        if (otherTabId === tabId || (accHasChatOpened && accHasThreadOpened)) {\n          return [accHasChatOpened, accHasThreadOpened];\n        }\n\n        const otherMessageList = selectCurrentMessageList(global, otherTabId);\n        const isSameChat = otherMessageList?.chatId === currentChatId;\n        const isSameThread = isSameChat && otherMessageList?.threadId === currentThreadId;\n\n        return [accHasChatOpened || isSameChat, accHasThreadOpened || isSameThread];\n      }, [currentChatId === newChatId, false]);\n\n    const shouldAbortChatRequests = !isChatOpened || !isThreadOpened;\n\n    if (shouldAbortChatRequests) {\n      abortChatRequests(currentChatId, isChatOpened ? currentThreadId : undefined);\n    }\n  }\n}\n\naddActionHandler('openChat', (global, actions, payload): ActionReturnType => {\n  const {\n    id, type, noForumTopicPanel, shouldReplaceHistory, shouldReplaceLast,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  actions.processOpenChatOrThread({\n    chatId: id,\n    type,\n    threadId: MAIN_THREAD_ID,\n    noForumTopicPanel,\n    shouldReplaceHistory,\n    shouldReplaceLast,\n    tabId,\n  });\n\n  abortChatRequestsForCurrentChat(global, id, MAIN_THREAD_ID, tabId);\n\n  if (!id || id === TMP_CHAT_ID) {\n    return;\n  }\n\n  const chat = selectChat(global, id);\n\n  if (chat?.hasUnreadMark) {\n    actions.toggleChatUnread({ id });\n  }\n\n  const isChatOnlySummary = !selectChatLastMessageId(global, id);\n\n  if (!chat) {\n    if (selectIsChatWithSelf(global, id)) {\n      void callApi('fetchChat', { type: 'self' });\n    } else {\n      const user = selectUser(global, id);\n      if (user) {\n        void callApi('fetchChat', { type: 'user', user });\n      }\n    }\n  } else if (isChatOnlySummary && !chat.isMin) {\n    actions.requestChatUpdate({ chatId: id });\n  }\n});\n\naddActionHandler('openSavedDialog', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId(), ...otherParams } = payload;\n\n  actions.openThread({\n    chatId: global.currentUserId!,\n    threadId: chatId,\n    tabId,\n    ...otherParams,\n  });\n});\n\naddActionHandler('openThread', async (global, actions, payload): Promise<void> => {\n  const {\n    type, isComments, noForumTopicPanel, shouldReplaceHistory, shouldReplaceLast,\n    focusMessageId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  let { chatId } = payload;\n  let threadId: ThreadId | undefined;\n  let loadingChatId: string;\n  let loadingThreadId: ThreadId;\n\n  if (!isComments) {\n    loadingChatId = payload.chatId;\n    threadId = payload.threadId;\n    loadingThreadId = threadId;\n\n    const originalChat = selectChat(global, loadingChatId);\n    if (threadId === MAIN_THREAD_ID) {\n      actions.openChat({\n        id: chatId,\n        type,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n        tabId,\n      });\n      return;\n    } else if (originalChat?.isForum || (chatId && getIsSavedDialog(chatId, threadId, global.currentUserId))) {\n      actions.processOpenChatOrThread({\n        chatId,\n        type,\n        threadId,\n        isComments,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n        tabId,\n      });\n      return;\n    }\n  } else {\n    const { originChannelId, originMessageId } = payload;\n\n    loadingChatId = originChannelId;\n    loadingThreadId = originMessageId;\n  }\n\n  const chat = selectChat(global, loadingChatId);\n  const threadInfo = selectThreadInfo(global, loadingChatId, loadingThreadId);\n  const thread = selectThread(global, loadingChatId, loadingThreadId);\n  if (!chat) return;\n\n  abortChatRequestsForCurrentChat(global, loadingChatId, loadingThreadId, tabId);\n\n  if (chatId\n    && threadInfo?.threadId\n    && (isComments || (thread?.listedIds?.length && thread.listedIds.includes(Number(threadInfo.threadId))))) {\n    global = updateTabState(global, {\n      loadingThread: undefined,\n    }, tabId);\n    setGlobal(global);\n    actions.processOpenChatOrThread({\n      chatId,\n      type,\n      threadId: threadInfo.threadId,\n      isComments,\n      noForumTopicPanel,\n      shouldReplaceHistory,\n      shouldReplaceLast,\n      tabId,\n    });\n    return;\n  }\n\n  let { loadingThread } = selectTabState(global, tabId);\n  if (loadingThread) {\n    abortChatRequests(loadingThread.loadingChatId, loadingThread.loadingMessageId);\n  }\n\n  global = updateTabState(global, {\n    loadingThread: {\n      loadingChatId,\n      loadingMessageId: Number(loadingThreadId),\n    },\n  }, tabId);\n  setGlobal(global);\n\n  const openPreviousChat = () => {\n    // eslint-disable-next-line eslint-multitab-tt/no-immediate-global\n    const currentGlobal = getGlobal();\n    if (isComments\n      || selectCurrentMessageList(currentGlobal, tabId)?.chatId !== loadingChatId\n      || selectCurrentMessageList(currentGlobal, tabId)?.threadId !== loadingThreadId) {\n      return;\n    }\n    actions.openPreviousChat({ tabId });\n  };\n\n  if (!isComments) {\n    actions.processOpenChatOrThread({\n      chatId,\n      type,\n      threadId: threadId!,\n      tabId,\n      isComments,\n      noForumTopicPanel,\n      shouldReplaceHistory,\n      shouldReplaceLast,\n    });\n  }\n\n  const result = await callApi('fetchDiscussionMessage', {\n    chat: selectChat(global, loadingChatId)!,\n    messageId: Number(loadingThreadId),\n  });\n\n  global = getGlobal();\n  loadingThread = selectTabState(global, tabId).loadingThread;\n  if (loadingThread?.loadingChatId !== loadingChatId || loadingThread?.loadingMessageId !== loadingThreadId) {\n    openPreviousChat();\n    return;\n  }\n\n  if (!result) {\n    global = updateTabState(global, {\n      loadingThread: undefined,\n    }, tabId);\n    setGlobal(global);\n\n    actions.showNotification({\n      message: langProvider.oldTranslate(isComments ? 'ChannelPostDeleted' : 'lng_message_not_found'),\n      tabId,\n    });\n\n    openPreviousChat();\n    return;\n  }\n\n  threadId ??= result.threadId;\n  chatId ??= result.chatId;\n\n  if (!chatId) {\n    openPreviousChat();\n    return;\n  }\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  if (isComments) {\n    global = updateThreadInfo(global, loadingChatId, loadingThreadId, {\n      threadId,\n    });\n\n    global = updateThreadInfo(global, chatId, threadId, {\n      isCommentsInfo: false,\n      threadId,\n      chatId,\n      fromChannelId: loadingChatId,\n      fromMessageId: loadingThreadId,\n      ...(threadInfo\n        && pick(threadInfo, ['messagesCount', 'lastMessageId', 'lastReadInboxMessageId', 'recentReplierIds'])),\n    });\n  }\n  global = updateThread(global, chatId, threadId, {\n    firstMessageId: result.firstMessageId,\n  });\n  setGlobal(global);\n\n  if (focusMessageId) {\n    actions.focusMessage({\n      chatId,\n      threadId: threadId!,\n      messageId: focusMessageId,\n      tabId,\n    });\n  }\n\n  actions.loadViewportMessages({\n    chatId,\n    threadId,\n    tabId,\n    onError: () => {\n      global = getGlobal();\n      global = updateTabState(global, {\n        loadingThread: undefined,\n      }, tabId);\n      setGlobal(global);\n\n      actions.showNotification({\n        message: langProvider.oldTranslate('Group.ErrorAccessDenied'),\n        tabId,\n      });\n    },\n    onLoaded: () => {\n      global = getGlobal();\n      loadingThread = selectTabState(global, tabId).loadingThread;\n      if (loadingThread?.loadingChatId !== loadingChatId || loadingThread?.loadingMessageId !== loadingThreadId) {\n        return;\n      }\n\n      global = updateTabState(global, {\n        loadingThread: undefined,\n      }, tabId);\n      setGlobal(global);\n\n      actions.processOpenChatOrThread({\n        chatId,\n        type,\n        threadId: threadId!,\n        tabId,\n        isComments,\n        noForumTopicPanel,\n        shouldReplaceHistory,\n        shouldReplaceLast,\n      });\n    },\n  });\n});\n\naddActionHandler('openLinkedChat', async (global, actions, payload): Promise<void> => {\n  const { id, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const chatFullInfo = await callApi('fetchFullChat', chat);\n\n  if (chatFullInfo?.fullInfo?.linkedChatId) {\n    actions.openChat({ id: chatFullInfo.fullInfo.linkedChatId, tabId });\n  }\n});\n\naddActionHandler('openSupportChat', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const chat = selectSupportChat(global);\n  if (chat) {\n    actions.openChat({ id: chat.id, shouldReplaceHistory: true, tabId });\n    return;\n  }\n\n  actions.openChat({ id: TMP_CHAT_ID, shouldReplaceHistory: true, tabId });\n\n  const result = await callApi('fetchChat', { type: 'support' });\n  if (result) {\n    actions.openChat({ id: result.chatId, shouldReplaceHistory: true, tabId });\n  }\n});\n\naddActionHandler('loadAllChats', async (global, actions, payload): Promise<void> => {\n  const { whenFirstBatchDone } = payload;\n  const listType = payload.listType;\n  let isCallbackFired = false;\n  let i = 0;\n\n  while (!global.chats.isFullyLoaded[listType]) {\n    if (i++ >= INFINITE_LOOP_MARKER) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.error('`actions/loadAllChats`: Infinite loop detected');\n      }\n\n      return;\n    }\n\n    global = getGlobal();\n\n    if (global.connectionState !== 'connectionStateReady' || global.authState !== 'authorizationStateReady') {\n      return;\n    }\n\n    await loadChats(\n      listType,\n      true,\n    );\n\n    if (!isCallbackFired) {\n      await whenFirstBatchDone?.();\n      isCallbackFired = true;\n    }\n\n    global = getGlobal();\n  }\n});\n\naddActionHandler('loadFullChat', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, force, withPhotos,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const loadChat = async () => {\n    await loadFullChat(global, actions, chat);\n    if (withPhotos) {\n      actions.loadMoreProfilePhotos({ peerId: chatId, shouldInvalidateCache: true });\n    }\n  };\n\n  if (force) {\n    void loadChat();\n  } else {\n    runDebouncedForLoadFullChat(loadChat);\n  }\n});\n\naddActionHandler('loadTopChats', (): ActionReturnType => {\n  runThrottledForLoadTopChats(() => {\n    loadChats('active', undefined, true);\n    loadChats('archived', undefined, true);\n  });\n});\n\naddActionHandler('requestChatUpdate', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  void callApi('requestChatUpdate', {\n    chat,\n    ...(chatId === SERVICE_NOTIFICATIONS_USER_ID && {\n      lastLocalMessage: selectLastServiceNotification(global)?.message,\n    }),\n  });\n});\n\naddActionHandler('requestSavedDialogUpdate', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('fetchMessages', {\n    chat,\n    isSavedDialog: true,\n    limit: 1,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = addMessages(global, result.messages);\n\n  if (result.messages.length) {\n    global = updateChatLastMessageId(global, chatId, result.messages[0].id, 'saved');\n    global = addChatListIds(global, 'saved', [chatId]);\n\n    setGlobal(global);\n  } else {\n    global = removeChatFromChatLists(global, chatId, 'saved');\n\n    setGlobal(global);\n\n    Object.values(global.byTabId).forEach(({ id: tabId }) => {\n      const currentMessageList = selectCurrentMessageList(global, tabId);\n      if (!currentMessageList) return;\n      const { chatId: tabChatId, threadId } = currentMessageList;\n\n      if (selectIsChatWithSelf(global, tabChatId) && threadId === chatId) {\n        actions.openChat({ id: undefined, tabId });\n      }\n    });\n  }\n});\n\naddActionHandler('updateChatMutedState', (global, actions, payload): ActionReturnType => {\n  const { chatId, muteUntil = 0 } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const isMuted = payload.isMuted ?? muteUntil > 0;\n\n  global = updateChat(global, chatId, { isMuted });\n  setGlobal(global);\n  void callApi('updateChatMutedState', { chat, isMuted, muteUntil });\n});\n\naddActionHandler('updateTopicMutedState', (global, actions, payload): ActionReturnType => {\n  const { chatId, topicId, muteUntil = 0 } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const isMuted = payload.isMuted ?? muteUntil > 0;\n\n  global = updateTopic(global, chatId, topicId, { isMuted });\n  setGlobal(global);\n  void callApi('updateTopicMutedState', {\n    chat, topicId, isMuted, muteUntil,\n  });\n});\n\naddActionHandler('createChannel', async (global, actions, payload): Promise<void> => {\n  const {\n    title, about, photo, memberIds, tabId = getCurrentTabId(),\n  } = payload;\n\n  const users = (memberIds as string[])\n    .map((id) => selectUser(global, id))\n    .filter(Boolean);\n\n  global = updateTabState(global, {\n    chatCreation: {\n      progress: ChatCreationProgress.InProgress,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  let createdChannel: ApiChat | undefined;\n  let missingInvitedUsers: ApiMissingInvitedUser[] | undefined;\n  try {\n    const result = await callApi('createChannel', { title, about, users });\n    createdChannel = result?.channel;\n    missingInvitedUsers = result?.missingUsers;\n  } catch (error) {\n    global = getGlobal();\n\n    global = updateTabState(global, {\n      chatCreation: {\n        progress: ChatCreationProgress.Error,\n      },\n    }, tabId);\n\n    setGlobal(global);\n\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (!createdChannel) {\n    return;\n  }\n\n  const { id: channelId, accessHash } = createdChannel;\n\n  global = getGlobal();\n  global = updateChat(global, channelId, createdChannel);\n  global = updateTabState(global, {\n    chatCreation: {\n      ...selectTabState(global, tabId).chatCreation,\n      progress: createdChannel ? ChatCreationProgress.Complete : ChatCreationProgress.Error,\n    },\n  }, tabId);\n  setGlobal(global);\n  actions.openChat({ id: channelId, shouldReplaceHistory: true, tabId });\n\n  if (missingInvitedUsers) {\n    global = getGlobal();\n    global = updateMissingInvitedUsers(global, channelId, missingInvitedUsers, tabId);\n    setGlobal(global);\n  }\n\n  if (channelId && accessHash && photo) {\n    await callApi('editChatPhoto', { chatId: channelId, accessHash, photo });\n  }\n});\n\naddActionHandler('joinChannel', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const { id: channelId, accessHash } = chat;\n\n  if (!(channelId && accessHash)) {\n    return;\n  }\n\n  try {\n    await callApi('joinChannel', { channelId, accessHash });\n  } catch (error) {\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n});\n\naddActionHandler('deleteChatUser', (global, actions, payload): ActionReturnType => {\n  const { chatId, userId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n  if (!chat || !user) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  void callApi('deleteChatUser', { chat, user });\n});\n\naddActionHandler('deleteChat', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  void callApi('deleteChat', { chatId: chat.id });\n});\n\naddActionHandler('leaveChannel', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  const { id: channelId, accessHash } = chat;\n  if (channelId && accessHash) {\n    await callApi('leaveChannel', { channelId, accessHash });\n    global = getGlobal();\n    const chatMessages = selectChatMessages(global, chatId);\n    const localMessageIds = Object.keys(chatMessages).map(Number).filter(isLocalMessageId);\n    global = deleteChatMessages(global, chatId, localMessageIds);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChannel', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = leaveChat(global, chatId);\n  setGlobal(global);\n\n  if (selectCurrentMessageList(global, tabId)?.chatId === chatId) {\n    actions.openChat({ id: undefined, tabId });\n  }\n\n  const { id: channelId, accessHash } = chat;\n  if (channelId && accessHash) {\n    void callApi('deleteChannel', { channelId, accessHash });\n  }\n});\n\naddActionHandler('createGroupChat', async (global, actions, payload): Promise<void> => {\n  const {\n    title, memberIds, photo, tabId = getCurrentTabId(),\n  } = payload;\n  const users = (memberIds as string[])\n    .map((id) => selectUser(global, id))\n    .filter(Boolean);\n\n  global = updateTabState(global, {\n    chatCreation: {\n      progress: ChatCreationProgress.InProgress,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  try {\n    const { chat: createdChat, missingUsers } = await callApi('createGroupChat', {\n      title,\n      users,\n    }) ?? {};\n\n    if (!createdChat) {\n      return;\n    }\n\n    const { id: chatId } = createdChat;\n\n    global = getGlobal();\n    global = updateChat(global, chatId, createdChat);\n    global = updateTabState(global, {\n      chatCreation: {\n        ...selectTabState(global, tabId).chatCreation,\n        progress: createdChat ? ChatCreationProgress.Complete : ChatCreationProgress.Error,\n      },\n    }, tabId);\n    setGlobal(global);\n    actions.openChat({\n      id: chatId,\n      shouldReplaceHistory: true,\n      tabId,\n    });\n\n    if (missingUsers) {\n      global = getGlobal();\n      global = updateMissingInvitedUsers(global, chatId, missingUsers, tabId);\n      setGlobal(global);\n    }\n\n    if (chatId && photo) {\n      await callApi('editChatPhoto', {\n        chatId,\n        photo,\n      });\n    }\n  } catch (err) {\n    if ((err as ApiError).message === 'USERS_TOO_FEW') {\n      global = getGlobal();\n      global = updateTabState(global, {\n        chatCreation: {\n          ...selectTabState(global, tabId).chatCreation,\n          progress: ChatCreationProgress.Error,\n          error: 'CreateGroupError',\n        },\n      }, tabId);\n      setGlobal(global);\n    }\n  }\n});\n\naddActionHandler('toggleChatPinned', (global, actions, payload): ActionReturnType => {\n  const { id, folderId, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const limit = selectCurrentLimit(global, 'dialogFolderPinned');\n\n  if (folderId) {\n    const folder = selectChatFolder(global, folderId);\n    if (folder) {\n      const shouldBePinned = !selectIsChatPinned(global, id, folderId);\n\n      const { pinnedChatIds, includedChatIds } = folder;\n      const newPinnedIds = shouldBePinned\n        ? [id, ...(pinnedChatIds || [])]\n        : (pinnedChatIds || []).filter((pinnedId) => pinnedId !== id);\n\n      // With both Pin and Unpin we need to re-add a user to the included group\n      const newIncludedChatIds = [id, ...includedChatIds];\n\n      void callApi('editChatFolder', {\n        id: folderId,\n        folderUpdate: {\n          ...folder,\n          pinnedChatIds: newPinnedIds,\n          includedChatIds: newIncludedChatIds,\n        },\n      });\n    }\n  } else {\n    const listType = selectChatListType(global, id);\n    const isPinned = selectIsChatPinned(global, id, listType === 'archived' ? ARCHIVED_FOLDER_ID : undefined);\n\n    const ids = global.chats.orderedPinnedIds[listType === 'archived' ? 'archived' : 'active'];\n    if ((ids?.length || 0) >= limit && !isPinned) {\n      actions.openLimitReachedModal({\n        limit: 'dialogFolderPinned',\n        tabId,\n      });\n      return;\n    }\n    void callApi('toggleChatPinned', { chat, shouldBePinned: !isPinned });\n  }\n});\n\naddActionHandler('toggleChatArchived', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n  const chat = selectChat(global, id);\n  if (chat) {\n    void callApi('toggleChatArchived', {\n      chat,\n      folderId: isChatArchived(chat) ? 0 : ARCHIVED_FOLDER_ID,\n    });\n  }\n});\n\naddActionHandler('toggleSavedDialogPinned', (global, actions, payload): ActionReturnType => {\n  const { id, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, id);\n  if (!chat) {\n    return;\n  }\n\n  const limit = selectCurrentLimit(global, 'savedDialogsPinned');\n\n  const isPinned = selectIsChatPinned(global, id, SAVED_FOLDER_ID);\n\n  const ids = global.chats.orderedPinnedIds.saved;\n  if ((ids?.length || 0) >= limit && !isPinned) {\n    actions.openLimitReachedModal({\n      limit: 'savedDialogsPinned',\n      tabId,\n    });\n    return;\n  }\n  void callApi('toggleSavedDialogPinned', { chat, shouldBePinned: !isPinned });\n});\n\naddActionHandler('loadChatFolders', async (global): Promise<void> => {\n  const chatFolders = await callApi('fetchChatFolders');\n\n  if (chatFolders) {\n    global = getGlobal();\n\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        ...chatFolders,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('loadRecommendedChatFolders', async (global): Promise<void> => {\n  const recommendedChatFolders = await callApi('fetchRecommendedChatFolders');\n\n  if (recommendedChatFolders) {\n    global = getGlobal();\n\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        recommended: recommendedChatFolders,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('editChatFolders', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, idsToRemove, idsToAdd, tabId = getCurrentTabId(),\n  } = payload;\n  const limit = selectCurrentLimit(global, 'dialogFiltersChats');\n\n  const isLimitReached = idsToAdd\n    .some((id) => selectChatFolder(global, id)!.includedChatIds.length >= limit);\n  if (isLimitReached) {\n    actions.openLimitReachedModal({ limit: 'dialogFiltersChats', tabId });\n    return;\n  }\n\n  idsToRemove.forEach(async (id) => {\n    const folder = selectChatFolder(global, id);\n    if (folder) {\n      await callApi('editChatFolder', {\n        id,\n        folderUpdate: {\n          ...folder,\n          pinnedChatIds: folder.pinnedChatIds?.filter((pinnedId) => pinnedId !== chatId),\n          includedChatIds: folder.includedChatIds.filter((includedId) => includedId !== chatId),\n        },\n      });\n    }\n  });\n\n  idsToAdd.forEach(async (id) => {\n    const folder = selectChatFolder(global, id);\n    if (folder) {\n      await callApi('editChatFolder', {\n        id,\n        folderUpdate: {\n          ...folder,\n          includedChatIds: folder.includedChatIds.concat(chatId),\n        },\n      });\n    }\n  });\n});\n\naddActionHandler('editChatFolder', (global, actions, payload): ActionReturnType => {\n  const { id, folderUpdate } = payload;\n  const folder = selectChatFolder(global, id);\n\n  if (folder) {\n    void callApi('editChatFolder', {\n      id,\n      folderUpdate: {\n        id,\n        emoticon: folder.emoticon,\n        pinnedChatIds: folder.pinnedChatIds,\n        ...folderUpdate,\n      },\n    });\n  }\n});\n\naddActionHandler('addChatFolder', async (global, actions, payload): Promise<void> => {\n  const { folder, tabId = getCurrentTabId() } = payload;\n  const { orderedIds, byId } = global.chatFolders;\n\n  const limit = selectCurrentLimit(global, 'dialogFilters');\n  if (Object.keys(byId).length >= limit) {\n    actions.openLimitReachedModal({\n      limit: 'dialogFilters',\n      tabId,\n    });\n    return;\n  }\n\n  const maxId = Math.max(...(orderedIds || []), ARCHIVED_FOLDER_ID);\n\n  // Clear fields from recommended folders\n  const { id: recommendedId, description, ...newFolder } = folder;\n\n  const newId = maxId + 1;\n  const folderUpdate = {\n    id: newId,\n    ...newFolder,\n  };\n  await callApi('editChatFolder', {\n    id: newId,\n    folderUpdate,\n  });\n\n  // Update called from the above `callApi` is throttled, but we need to apply changes immediately\n  actions.apiUpdate({\n    '@type': 'updateChatFolder',\n    id: newId,\n    folder: folderUpdate,\n  });\n\n  actions.requestNextSettingsScreen({\n    foldersAction: {\n      type: 'setFolderId',\n      payload: maxId + 1,\n    },\n    tabId,\n  });\n\n  if (!description) {\n    return;\n  }\n\n  global = getGlobal();\n  const { recommended } = global.chatFolders;\n\n  if (recommended) {\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        recommended: recommended.filter(({ id }) => id !== recommendedId),\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('sortChatFolders', async (global, actions, payload): Promise<void> => {\n  const { folderIds } = payload;\n\n  const result = await callApi('sortChatFolders', folderIds);\n  if (result) {\n    global = getGlobal();\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        orderedIds: folderIds,\n      },\n    };\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChatFolder', async (global, actions, payload): Promise<void> => {\n  const { id } = payload;\n  const folder = selectChatFolder(global, id);\n\n  if (folder) {\n    await callApi('deleteChatFolder', id);\n  }\n});\n\naddActionHandler('toggleChatUnread', (global, actions, payload): ActionReturnType => {\n  const { id } = payload;\n  const chat = selectChat(global, id);\n  if (chat) {\n    if (chat.unreadCount) {\n      void callApi('markMessageListRead', { chat, threadId: MAIN_THREAD_ID });\n    } else {\n      void callApi('toggleDialogUnread', {\n        chat,\n        hasUnreadMark: !chat.hasUnreadMark,\n      });\n    }\n  }\n});\n\naddActionHandler('markTopicRead', (global, actions, payload): ActionReturnType => {\n  const { chatId, topicId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const topic = selectTopic(global, chatId, topicId);\n\n  const lastTopicMessageId = topic?.lastMessageId;\n  if (!lastTopicMessageId) return;\n\n  void callApi('markMessageListRead', {\n    chat,\n    threadId: topicId,\n    maxId: lastTopicMessageId,\n  });\n\n  global = getGlobal();\n  global = updateTopic(global, chatId, topicId, {\n    unreadCount: 0,\n  });\n  global = updateThreadInfo(global, chatId, topicId, {\n    lastReadInboxMessageId: lastTopicMessageId,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('checkChatInvite', async (global, actions, payload): Promise<void> => {\n  const { hash, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkChatInvite', hash);\n  if (!result) {\n    return;\n  }\n\n  global = getGlobal();\n\n  if (result.users) {\n    global = addUsers(global, buildCollectionByKey(result.users, 'id'));\n  }\n\n  if (result.chat) {\n    global = addChats(global, buildCollectionByKey([result.chat], 'id'));\n    setGlobal(global);\n    actions.openChat({ id: result.chat.id, tabId });\n    return;\n  }\n\n  if (result.invite.subscriptionFormId) {\n    global = updateTabState(global, {\n      starsPayment: {\n        inputInvoice: {\n          type: 'chatInviteSubscription',\n          hash,\n        },\n        subscriptionInfo: result.invite,\n        status: 'pending',\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    chatInviteModal: {\n      hash,\n      inviteInfo: result.invite,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('openChatByPhoneNumber', async (global, actions, payload): Promise<void> => {\n  const {\n    phoneNumber, startAttach, attach, text, tabId = getCurrentTabId(),\n  } = payload;\n\n  // Open temporary empty chat to make the click response feel faster\n  actions.openChat({ id: TMP_CHAT_ID, tabId });\n\n  const chat = await fetchChatByPhoneNumber(global, phoneNumber);\n  if (!chat) {\n    actions.openPreviousChat({ tabId });\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_username_by_phone_not_found').replace('{phone}', phoneNumber),\n      tabId,\n    });\n    return;\n  }\n\n  if (text) {\n    actions.openChatWithDraft({ chatId: chat.id, text: { text }, tabId });\n  } else {\n    actions.openChat({ id: chat.id, tabId });\n  }\n\n  if (attach) {\n    global = getGlobal();\n    openAttachMenuFromLink(global, actions, chat.id, attach, startAttach, tabId);\n  }\n});\n\naddActionHandler('openTelegramLink', async (global, actions, payload): Promise<void> => {\n  const {\n    url,\n    shouldIgnoreCache,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const {\n    openChatByPhoneNumber,\n    checkChatInvite,\n    openStickerSet,\n    openChatWithDraft,\n    joinVoiceChatByLink,\n    focusMessage,\n    openInvoice,\n    checkChatlistInvite,\n    openChatByUsername: openChatByUsernameAction,\n    openStoryViewerByUsername,\n    processBoostParameters,\n    checkGiftCode,\n  } = actions;\n\n  if (isDeepLink(url)) {\n    const isProcessed = processDeepLink(url);\n    if (isProcessed || url.match(RE_TG_LINK)) {\n      return;\n    }\n  }\n\n  const uri = new URL(url.toLowerCase().startsWith('http') ? url : `https://${url}`);\n  if (TME_WEB_DOMAINS.has(uri.hostname) && uri.pathname === '/') {\n    window.open(uri.toString(), '_blank', 'noopener');\n    return;\n  }\n\n  const hostname = TME_WEB_DOMAINS.has(uri.hostname) ? 't.me' : uri.hostname;\n  const hostParts = hostname.split('.');\n  if (hostParts.length > 3) return;\n\n  const adaptedPathname = uri.pathname.replace(/^\\/?s\\//, '');\n  const pathname = hostParts.length === 3 ? `${hostParts[0]}/${adaptedPathname}` : adaptedPathname;\n  const [part1, part2, part3] = pathname.split('/').filter(Boolean).map((part) => decodeURI(part));\n  const params = Object.fromEntries(uri.searchParams);\n\n  let hash: string | undefined;\n  if (part1 === 'joinchat') {\n    hash = part2;\n  }\n\n  const storyId = part2 === 's' && (Number(part3) || undefined);\n  const hasBoost = params.hasOwnProperty('boost');\n\n  if (part1.match(/^\\+([0-9]+)(\\?|$)/)) {\n    openChatByPhoneNumber({\n      phoneNumber: part1.substr(1, part1.length - 1),\n      startAttach: params.startattach,\n      attach: params.attach,\n      text: params.text,\n      tabId,\n    });\n    return;\n  }\n\n  if (storyId) {\n    openStoryViewerByUsername({\n      username: part1,\n      storyId,\n      tabId,\n    });\n\n    return;\n  }\n\n  if (part1.startsWith(' ') || part1.startsWith('+')) {\n    hash = part1.substr(1, part1.length - 1);\n  }\n\n  if (hash) {\n    checkChatInvite({ hash, tabId });\n    return;\n  }\n\n  if (part1 === 'addstickers' || part1 === 'addemoji') {\n    openStickerSet({\n      stickerSetInfo: {\n        shortName: part2,\n      },\n      shouldIgnoreCache,\n      tabId,\n    });\n    return;\n  }\n\n  if (part1 === 'share') {\n    const text = formatShareText(params.url, params.text);\n    openChatWithDraft({ text, tabId });\n    return;\n  }\n\n  if (part1 === 'addlist') {\n    const slug = part2;\n    checkChatlistInvite({ slug, tabId });\n    return;\n  }\n\n  if (part1 === 'giftcode') {\n    const slug = part2;\n    checkGiftCode({ slug, tabId });\n    return;\n  }\n\n  const chatOrChannelPostId = part2 || undefined;\n  const messageId = part3 ? Number(part3) : undefined;\n  const commentId = params.comment ? Number(params.comment) : undefined;\n\n  const isWebApp = await checkWebAppExists(global, part1, part2);\n\n  const shouldTryOpenChat = (part1 && !part2) || Number.isInteger(Number(part2)) || isWebApp;\n\n  if (params.hasOwnProperty('voicechat') || params.hasOwnProperty('livestream')) {\n    joinVoiceChatByLink({\n      username: part1,\n      inviteHash: params.voicechat || params.livestream,\n      tabId,\n    });\n  } else if (part1 === 'boost') {\n    const username = part2;\n    const id = params.c;\n\n    const isPrivate = !username && Boolean(id);\n\n    processBoostParameters({\n      usernameOrId: username || id,\n      isPrivate,\n      tabId,\n    });\n  } else if (hasBoost) {\n    const isPrivate = part1 === 'c' && Boolean(chatOrChannelPostId);\n    processBoostParameters({\n      usernameOrId: chatOrChannelPostId || part1,\n      isPrivate,\n      tabId,\n    });\n  } else if (part1 === 'c' && chatOrChannelPostId && messageId) {\n    focusMessage({\n      chatId: toChannelId(chatOrChannelPostId),\n      messageId,\n      tabId,\n    });\n  } else if (part1.startsWith('$')) {\n    openInvoice({\n      type: 'slug',\n      slug: part1.substring(1),\n      tabId,\n    });\n  } else if (part1 === 'invoice') {\n    openInvoice({\n      type: 'slug',\n      slug: part2,\n      tabId,\n    });\n  } else if (shouldTryOpenChat) {\n    openChatByUsernameAction({\n      username: part1,\n      messageId: messageId || Number(chatOrChannelPostId),\n      threadId: messageId ? Number(chatOrChannelPostId) : undefined,\n      commentId,\n      startParam: params.start,\n      startAttach: params.startattach,\n      attach: params.attach,\n      startApp: params.startapp,\n      mode: params.mode,\n      originalParts: [part1, part2, part3],\n      tabId,\n    });\n  } else {\n    actions.openUrl({\n      url, shouldSkipModal: true, tabId, ignoreDeepLinks: true,\n    });\n  }\n});\n\naddActionHandler('processBoostParameters', async (global, actions, payload): Promise<void> => {\n  const { usernameOrId, isPrivate, tabId = getCurrentTabId() } = payload;\n\n  let chat: ApiChat | undefined;\n\n  if (isPrivate) {\n    const chatId = toChannelId(usernameOrId);\n    chat = selectChat(global, chatId);\n    if (!chat) {\n      actions.showNotification({ message: 'Chat does not exist', tabId });\n      return;\n    }\n  } else {\n    chat = await fetchChatByUsername(global, usernameOrId);\n    if (!chat) {\n      actions.showNotification({ message: 'User does not exist', tabId });\n      return;\n    }\n  }\n\n  if (!isChatChannel(chat) && !isChatSuperGroup(chat)) {\n    actions.openChat({ id: chat.id, tabId });\n    return;\n  }\n\n  actions.openBoostModal({\n    chatId: chat.id,\n    tabId,\n  });\n});\n\naddActionHandler('acceptChatInvite', async (global, actions, payload): Promise<void> => {\n  const { hash, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('importChatInvite', { hash });\n  if (!result) {\n    return;\n  }\n\n  actions.openChat({ id: result.id, tabId });\n});\n\naddActionHandler('openChatByUsername', async (global, actions, payload): Promise<void> => {\n  const {\n    username, messageId, commentId, startParam, startAttach, attach, threadId, originalParts, startApp, mode,\n    text, onChatChanged, choose, ref,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectCurrentChat(global, tabId);\n  const webAppName = originalParts?.[1];\n  const isWebApp = webAppName && !Number(webAppName) && !originalParts?.[2];\n\n  if (!commentId) {\n    if (startAttach === undefined && messageId && !startParam && !ref\n      && chat?.usernames?.some((c) => c.username === username)) {\n      actions.focusMessage({\n        chatId: chat.id, threadId, messageId, tabId,\n      });\n      return;\n    }\n\n    if (startAttach !== undefined && choose) {\n      actions.processAttachBotParameters({\n        username,\n        filter: choose,\n        startParam: startAttach || startApp,\n        tabId,\n      });\n      return;\n    }\n\n    if (startApp !== undefined && !webAppName) {\n      const theme = extractCurrentThemeParams();\n      const chatByUsername = await fetchChatByUsername(global, username);\n      global = getGlobal();\n      const user = chatByUsername && selectUser(global, chatByUsername.id);\n      if (!chatByUsername || !chat || !user?.hasMainMiniApp) return;\n      actions.requestMainWebView({\n        botId: chatByUsername.id,\n        peerId: chat.id,\n        theme,\n        tabId,\n        mode,\n      });\n      return;\n    }\n    if (!isWebApp) {\n      await openChatByUsername(\n        global, actions, {\n          username,\n          threadId,\n          channelPostId: messageId,\n          startParam,\n          ref,\n          startAttach,\n          attach,\n          text,\n        }, tabId,\n      );\n      if (onChatChanged) {\n        // @ts-ignore\n        actions[onChatChanged.action](onChatChanged.payload);\n      }\n      return;\n    }\n  }\n\n  const usernameChat = selectChatByUsername(global, username);\n  if (commentId && messageId && usernameChat) {\n    actions.openThread({\n      isComments: true,\n      originChannelId: usernameChat.id,\n      originMessageId: messageId,\n      tabId,\n      focusMessageId: commentId,\n    });\n    return;\n  }\n\n  if (!isWebApp) actions.openChat({ id: TMP_CHAT_ID, tabId });\n\n  const chatByUsername = await fetchChatByUsername(global, username);\n\n  if (!chatByUsername) return;\n\n  if (isWebApp && chatByUsername) {\n    const theme = extractCurrentThemeParams();\n\n    actions.requestAppWebView({\n      appName: webAppName,\n      botId: chatByUsername.id,\n      tabId,\n      startApp,\n      mode,\n      theme,\n    });\n    return;\n  }\n\n  if (!messageId) return;\n\n  actions.openThread({\n    isComments: true,\n    originChannelId: chatByUsername.id,\n    originMessageId: messageId,\n    tabId,\n    focusMessageId: commentId,\n  });\n  if (onChatChanged) {\n    // @ts-ignore\n    actions[onChatChanged.action](onChatChanged.payload);\n  }\n});\n\naddActionHandler('togglePreHistoryHidden', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, isEnabled,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateChatFullInfo(global, chat.id, { isPreHistoryHidden: isEnabled });\n  setGlobal(global);\n\n  void callApi('togglePreHistoryHidden', { chat, isEnabled });\n});\n\naddActionHandler('updateChatDefaultBannedRights', (global, actions, payload): ActionReturnType => {\n  const { chatId, bannedRights } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('updateChatDefaultBannedRights', { chat, bannedRights });\n});\n\naddActionHandler('updateChatMemberBannedRights', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, userId, bannedRights,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  await callApi('updateChatMemberBannedRights', { chat, user, bannedRights });\n\n  global = getGlobal();\n\n  const updatedFullInfo = selectChatFullInfo(global, chat.id);\n  if (!updatedFullInfo) {\n    return;\n  }\n\n  const { members, kickedMembers } = updatedFullInfo;\n\n  const isBanned = Boolean(bannedRights.viewMessages);\n  const isUnblocked = !Object.keys(bannedRights).length;\n\n  global = updateChatFullInfo(global, chat.id, {\n    ...(members && isBanned && {\n      members: members.filter((m) => m.userId !== userId),\n    }),\n    ...(members && !isBanned && {\n      members: members.map((m) => (\n        m.userId === userId\n          ? { ...m, bannedRights }\n          : m\n      )),\n    }),\n    ...(isUnblocked && kickedMembers && {\n      kickedMembers: kickedMembers.filter((m) => m.userId !== userId),\n    }),\n  });\n  setGlobal(global);\n});\n\naddActionHandler('updateChatAdmin', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, userId, adminRights, customTitle,\n    tabId = getCurrentTabId(),\n  } = payload;\n\n  const user = selectUser(global, userId);\n  if (!user) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  await callApi('updateChatAdmin', {\n    chat, user, adminRights, customTitle,\n  });\n\n  const chatAfterUpdate = await callApi('fetchFullChat', chat);\n  if (!chatAfterUpdate?.fullInfo) {\n    return;\n  }\n\n  const { adminMembersById } = chatAfterUpdate.fullInfo;\n  const isDismissed = !Object.keys(adminRights).length;\n  let newAdminMembersById: Record<string, ApiChatMember> | undefined;\n  if (adminMembersById) {\n    if (isDismissed) {\n      const { [userId]: remove, ...rest } = adminMembersById;\n      newAdminMembersById = rest;\n    } else {\n      newAdminMembersById = {\n        ...adminMembersById,\n        [userId]: {\n          ...adminMembersById[userId],\n          adminRights,\n          customTitle,\n        },\n      };\n    }\n  }\n\n  if (newAdminMembersById) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chat.id, { adminMembersById: newAdminMembersById });\n    setGlobal(global);\n  }\n});\n\naddActionHandler('updateChat', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, title, about, photo, tabId = getCurrentTabId(),\n  } = payload;\n\n  const chat = selectChat(global, chatId);\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.InProgress, tabId);\n  setGlobal(global);\n\n  await Promise.all([\n    chat.title !== title\n      ? callApi('updateChatTitle', chat, title)\n      : undefined,\n    fullInfo?.about !== about\n      ? callApi('updateChatAbout', chat, about)\n      : undefined,\n    photo\n      ? callApi('editChatPhoto', { chatId, accessHash: chat.accessHash, photo })\n      : undefined,\n  ]);\n\n  global = getGlobal();\n  global = updateManagementProgress(global, ManagementProgress.Complete, tabId);\n  setGlobal(global);\n\n  if (photo) {\n    actions.loadFullChat({ chatId, withPhotos: true });\n  }\n});\n\naddActionHandler('updateChatPhoto', async (global, actions, payload): Promise<void> => {\n  const { photo, chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('editChatPhoto', {\n    chatId,\n    accessHash: chat.accessHash,\n    photo,\n  });\n  actions.loadFullChat({ chatId, withPhotos: true });\n});\n\naddActionHandler('deleteChatPhoto', async (global, actions, payload): Promise<void> => {\n  const { photo, chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  let isDeleted;\n  if (photo.id === chat.avatarPhotoId) {\n    isDeleted = await callApi('editChatPhoto', {\n      chatId,\n      accessHash: chat.accessHash,\n    });\n  } else {\n    isDeleted = await callApi('deleteProfilePhotos', [photo]);\n  }\n  if (!isDeleted) return;\n\n  global = getGlobal();\n  global = deletePeerPhoto(global, chatId, photo.id);\n  setGlobal(global);\n\n  actions.loadFullChat({ chatId, withPhotos: true });\n});\n\naddActionHandler('toggleSignatures', (global, actions, payload): ActionReturnType => {\n  const { chatId, areProfilesEnabled, areSignaturesEnabled } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('toggleSignatures', { chat, areProfilesEnabled, areSignaturesEnabled });\n});\n\naddActionHandler('loadGroupsForDiscussion', async (global): Promise<void> => {\n  const groups = await callApi('fetchGroupsForDiscussion');\n  if (!groups) {\n    return;\n  }\n\n  const addedById = groups.reduce((result, group) => {\n    if (group && !group.isForum) {\n      result[group.id] = group;\n    }\n\n    return result;\n  }, {} as Record<string, ApiChat>);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chats: {\n      ...global.chats,\n      forDiscussionIds: Object.keys(addedById),\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('linkDiscussionGroup', async (global, actions, payload): Promise<void> => {\n  const { channelId, chatId, tabId = getCurrentTabId() } = payload || {};\n\n  const channel = selectChat(global, channelId);\n  if (!channel) {\n    return;\n  }\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n\n  if (!chat) return;\n\n  let fullInfo = selectChatFullInfo(global, chat.id);\n  if (!fullInfo) {\n    const fullChat = await callApi('fetchFullChat', chat);\n    if (!fullChat) {\n      return;\n    }\n\n    fullInfo = fullChat.fullInfo;\n  }\n\n  if (fullInfo!.isPreHistoryHidden) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chat.id, { isPreHistoryHidden: false });\n    setGlobal(global);\n\n    await callApi('togglePreHistoryHidden', { chat, isEnabled: false });\n  }\n\n  void callApi('setDiscussionGroup', { channel, chat });\n});\n\naddActionHandler('unlinkDiscussionGroup', async (global, actions, payload): Promise<void> => {\n  const { channelId } = payload;\n\n  const channel = selectChat(global, channelId);\n  if (!channel) {\n    return;\n  }\n\n  const fullInfo = selectChatFullInfo(global, channelId);\n  let chat: ApiChat | undefined;\n  if (fullInfo?.linkedChatId) {\n    chat = selectChat(global, fullInfo.linkedChatId);\n  }\n\n  await callApi('setDiscussionGroup', { channel });\n  if (chat) {\n    global = getGlobal();\n    loadFullChat(global, actions, chat);\n  }\n});\n\naddActionHandler('setActiveChatFolder', (global, actions, payload): ActionReturnType => {\n  const { activeChatFolder, tabId = getCurrentTabId() } = payload;\n  const maxFolders = selectCurrentLimit(global, 'dialogFilters');\n\n  const isBlocked = activeChatFolder + 1 > maxFolders;\n\n  if (isBlocked) {\n    actions.openLimitReachedModal({\n      limit: 'dialogFilters',\n      tabId,\n    });\n    return undefined;\n  }\n\n  return updateTabState(global, {\n    activeChatFolder,\n  }, tabId);\n});\n\naddActionHandler('resetOpenChatWithDraft', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n\n  return updateTabState(global, {\n    requestedDraft: undefined,\n  }, tabId);\n});\n\naddActionHandler('loadMoreMembers', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const { chatId } = selectCurrentMessageList(global, tabId) || {};\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  if (!chat || isChatBasicGroup(chat)) {\n    return;\n  }\n\n  const offset = selectChatFullInfo(global, chat.id)?.members?.length;\n  if (offset !== undefined && chat.membersCount !== undefined && offset >= chat.membersCount) return;\n\n  const result = await callApi('fetchMembers', chat.id, chat.accessHash!, 'recent', offset);\n  if (!result) {\n    return;\n  }\n\n  const { members, userStatusesById } = result;\n  if (!members || !members.length) {\n    return;\n  }\n\n  global = getGlobal();\n  global = addUserStatuses(global, userStatusesById);\n  global = addChatMembers(global, chat, members);\n  setGlobal(global);\n});\n\naddActionHandler('addChatMembers', async (global, actions, payload): Promise<void> => {\n  const { chatId, memberIds, tabId = getCurrentTabId() } = payload;\n  const chat = selectChat(global, chatId);\n  const users = memberIds.map((userId) => selectUser(global, userId)).filter(Boolean);\n\n  if (!chat || !users.length) {\n    return;\n  }\n\n  actions.setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Loading, tabId });\n  const missingUsers = await callApi('addChatMembers', chat, users);\n  if (missingUsers) {\n    global = getGlobal();\n    global = updateMissingInvitedUsers(global, chatId, missingUsers, tabId);\n    setGlobal(global);\n  }\n  actions.setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.Closed, tabId });\n  global = getGlobal();\n  loadFullChat(global, actions, chat);\n});\n\naddActionHandler('deleteChatMember', async (global, actions, payload): Promise<void> => {\n  const { chatId, userId } = payload;\n  const chat = selectChat(global, chatId);\n  const user = selectUser(global, userId);\n\n  if (!chat || !user) {\n    return;\n  }\n\n  await callApi('deleteChatMember', chat, user);\n  global = getGlobal();\n  loadFullChat(global, actions, chat);\n});\n\naddActionHandler('toggleIsProtected', (global, actions, payload): ActionReturnType => {\n  const { chatId, isProtected } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  void callApi('toggleIsProtected', { chat, isProtected });\n});\n\naddActionHandler('setChatEnabledReactions', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, enabledReactions, reactionsLimit,\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('setChatEnabledReactions', {\n    chat,\n    enabledReactions,\n    reactionsLimit,\n  });\n\n  global = getGlobal();\n  void loadFullChat(global, actions, chat);\n});\n\naddActionHandler('fetchChat', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (chat) {\n    return;\n  }\n\n  if (selectIsChatWithSelf(global, chatId)) {\n    void callApi('fetchChat', { type: 'self' });\n  } else {\n    const user = selectUser(global, chatId);\n    if (user) {\n      void callApi('fetchChat', { type: 'user', user });\n    }\n  }\n});\n\naddActionHandler('loadChatSettings', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchChatSettings', chat);\n  if (!result) return;\n\n  const { settings } = result;\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, { settings });\n  setGlobal(global);\n});\n\naddActionHandler('toggleJoinToSend', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n  if (!isChatSuperGroup(chat) && !isChatChannel(chat)) return;\n\n  await callApi('toggleJoinToSend', chat, isEnabled);\n});\n\naddActionHandler('toggleJoinRequest', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n  if (!isChatSuperGroup(chat) && !isChatChannel(chat)) return;\n\n  await callApi('toggleJoinRequest', chat, isEnabled);\n});\n\naddActionHandler('openForumPanel', (global, actions, payload): ActionReturnType => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n  actions.toggleStoryRibbon({ isShown: false, tabId });\n  actions.toggleStoryRibbon({ isShown: false, isArchived: true, tabId });\n  return updateTabState(global, {\n    forumPanelChatId: chatId,\n  }, tabId);\n});\n\naddActionHandler('closeForumPanel', (global, actions, payload): ActionReturnType => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    forumPanelChatId: undefined,\n  }, tabId);\n});\n\naddActionHandler('processAttachBotParameters', async (global, actions, payload): Promise<void> => {\n  const {\n    username, filter, startParam, tabId = getCurrentTabId(),\n  } = payload;\n  const bot = await getAttachBotOrNotify(global, actions, username, tabId);\n  if (!bot) return;\n\n  const isForChat = Boolean(filter);\n\n  if (!isForChat) {\n    actions.callAttachBot({\n      isFromSideMenu: true,\n      bot,\n      startParam,\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n  const { attachMenu: { bots } } = global;\n  if (!bots[bot.id]) {\n    global = updateTabState(global, {\n      requestedAttachBotInstall: {\n        bot,\n        onConfirm: {\n          action: 'requestAttachBotInChat',\n          payload: {\n            bot,\n            filter,\n            startParam,\n          },\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n  actions.requestAttachBotInChat({\n    bot,\n    filter,\n    startParam,\n    tabId,\n  });\n});\n\naddActionHandler('loadTopics', async (global, actions, payload): Promise<void> => {\n  const { chatId, force } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const topicsInfo = selectTopicsInfo(global, chatId);\n\n  if (!force && topicsInfo?.listedTopicIds && topicsInfo.listedTopicIds.length === topicsInfo.totalCount) {\n    return;\n  }\n\n  const offsetTopic = !force ? topicsInfo?.listedTopicIds?.reduce((acc, el) => {\n    const topic = selectTopic(global, chatId, el);\n    const accTopic = selectTopic(global, chatId, acc);\n    if (!topic) return acc;\n    if (!accTopic || topic.lastMessageId < accTopic.lastMessageId) {\n      return el;\n    }\n    return acc;\n  }) : undefined;\n\n  const { id: offsetTopicId, date: offsetDate, lastMessageId: offsetId } = (offsetTopic\n    && selectTopic(global, chatId, offsetTopic)) || {};\n  const result = await callApi('fetchTopics', {\n    chat, offsetTopicId, offsetId, offsetDate, limit: offsetTopicId ? TOPICS_SLICE : TOPICS_SLICE_SECOND_LOAD,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  global = updateTopics(global, chatId, result.count, result.topics);\n  global = updateListedTopicIds(global, chatId, result.topics.map((topic) => topic.id));\n  Object.entries(result.draftsById || {}).forEach(([threadId, draft]) => {\n    global = replaceThreadParam(global, chatId, Number(threadId), 'draft', draft);\n  });\n  Object.entries(result.readInboxMessageIdByTopicId || {}).forEach(([topicId, messageId]) => {\n    global = updateThreadInfo(global, chatId, Number(topicId), { lastReadInboxMessageId: messageId });\n  });\n\n  setGlobal(global);\n});\n\naddActionHandler('loadTopicById', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('fetchTopicById', { chat, topicId });\n\n  if (!result) {\n    if ('tabId' in payload && payload.shouldCloseChatOnError) {\n      const { tabId = getCurrentTabId() } = payload;\n      actions.openChat({ id: undefined, tabId });\n    }\n    return;\n  }\n\n  global = getGlobal();\n  global = addMessages(global, result.messages);\n  global = updateTopic(global, chatId, topicId, result.topic);\n\n  setGlobal(global);\n});\n\naddActionHandler('toggleForum', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled, tabId = getCurrentTabId() } = payload;\n\n  const chat = await ensureIsSuperGroup(global, actions, chatId, tabId);\n  if (!chat) {\n    return;\n  }\n\n  let result: true | undefined;\n  try {\n    result = await callApi('toggleForum', { chat, isEnabled });\n  } catch (error) {\n    if ((error as ApiError).message.startsWith('A wait of')) {\n      actions.showNotification({ message: langProvider.oldTranslate('FloodWait'), tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (result) {\n    global = getGlobal();\n    global = updateChat(global, chat.id, { isForum: isEnabled });\n    setGlobal(global);\n\n    if (!isEnabled) {\n      actions.closeForumPanel({ tabId });\n    } else {\n      actions.openForumPanel({ chatId: chat.id, tabId });\n    }\n  }\n});\n\naddActionHandler('toggleParticipantsHidden', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const prevIsEnabled = selectChatFullInfo(global, chat.id)?.areParticipantsHidden;\n  global = updateChatFullInfo(global, chatId, { areParticipantsHidden: isEnabled });\n  setGlobal(global);\n\n  const result = await callApi('toggleParticipantsHidden', { chat, isEnabled });\n\n  if (!result && prevIsEnabled !== undefined) {\n    global = getGlobal();\n    global = updateChatFullInfo(global, chatId, { areParticipantsHidden: prevIsEnabled });\n    setGlobal(global);\n  }\n});\n\naddActionHandler('createTopic', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, title, iconColor, iconEmojiId,\n    tabId = getCurrentTabId(),\n  } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  if (selectTabState(global, tabId).createTopicPanel) {\n    global = updateTabState(global, {\n      createTopicPanel: {\n        chatId,\n        isLoading: true,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const topicId = await callApi('createTopic', {\n    chat, title, iconColor, iconEmojiId,\n  });\n  if (topicId) {\n    actions.openThread({\n      chatId, threadId: topicId, shouldReplaceHistory: true, tabId,\n    });\n  }\n  actions.closeCreateTopicPanel({ tabId });\n});\n\naddActionHandler('deleteTopic', async (global, actions, payload): Promise<void> => {\n  const { chatId, topicId } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  await callApi('deleteTopic', { chat, topicId });\n\n  global = getGlobal();\n  global = deleteTopic(global, chatId, topicId);\n  setGlobal(global);\n});\n\naddActionHandler('editTopic', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, topicId, tabId = getCurrentTabId(), ...rest\n  } = payload;\n  const chat = selectChat(global, chatId);\n  const topic = selectTopic(global, chatId, topicId);\n  if (!chat || !topic) return;\n\n  if (selectTabState(global, tabId).editTopicPanel) {\n    global = updateTabState(global, {\n      editTopicPanel: {\n        chatId,\n        topicId,\n        isLoading: true,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n\n  const result = await callApi('editTopic', { chat, topicId, ...rest });\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateTopic(global, chatId, topicId, rest);\n  setGlobal(global);\n\n  actions.closeEditTopicPanel({ tabId });\n});\n\naddActionHandler('toggleTopicPinned', (global, actions, payload): ActionReturnType => {\n  const {\n    chatId, topicId, isPinned, tabId = getCurrentTabId(),\n  } = payload;\n\n  const { topicsPinnedLimit } = global.appConfig || {};\n  const chat = selectChat(global, chatId);\n  const topics = selectTopics(global, chatId);\n  if (!chat || !topics || !topicsPinnedLimit) return;\n\n  if (isPinned && Object.values(topics).filter((topic) => topic.isPinned).length >= topicsPinnedLimit) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('LimitReachedPinnedTopics', topicsPinnedLimit, 'i'),\n      tabId,\n    });\n    return;\n  }\n\n  void callApi('togglePinnedTopic', { chat, topicId, isPinned });\n});\n\naddActionHandler('checkChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n\n  const result = await callApi('checkChatlistInvite', { slug });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('lng_group_invite_bad_link'),\n      tabId,\n    });\n    return;\n  }\n\n  global = getGlobal();\n\n  global = updateTabState(global, {\n    chatlistModal: {\n      invite: result.invite,\n    },\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('joinChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { invite, peerIds, tabId = getCurrentTabId() } = payload;\n\n  const peers = peerIds.map((peerId) => selectChat(global, peerId)).filter(Boolean);\n  const notJoinedCount = peers.filter((peer) => peer.isNotJoined).length;\n\n  const folder = 'folderId' in invite ? selectChatFolder(global, invite.folderId) : undefined;\n  const folderTitle = 'title' in invite ? invite.title : folder?.title;\n\n  try {\n    const result = await callApi('joinChatlistInvite', { slug: invite.slug, peers });\n    if (!result) return;\n\n    actions.showNotification({\n      title: langProvider.oldTranslate(folder ? 'FolderLinkUpdatedTitle' : 'FolderLinkAddedTitle', folderTitle),\n      message: langProvider.oldTranslate('FolderLinkAddedSubtitle', notJoinedCount, 'i'),\n      tabId,\n    });\n  } catch (error) {\n    if ((error as ApiError).message === 'CHATLISTS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'chatlistJoined', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n});\n\naddActionHandler('leaveChatlist', async (global, actions, payload): Promise<void> => {\n  const { folderId, peerIds, tabId = getCurrentTabId() } = payload;\n\n  const folder = selectChatFolder(global, folderId);\n\n  const peers = peerIds?.map((peerId) => selectChat(global, peerId)).filter(Boolean) || [];\n\n  const result = await callApi('leaveChatlist', { folderId, peers });\n\n  if (!result) return;\n\n  actions.showNotification({\n    title: langProvider.oldTranslate('FolderLinkDeletedTitle', folder.title),\n    message: langProvider.oldTranslate('FolderLinkDeletedSubtitle', peers.length, 'i'),\n    tabId,\n  });\n});\n\naddActionHandler('loadChatlistInvites', async (global, actions, payload): Promise<void> => {\n  const { folderId } = payload;\n\n  const result = await callApi('fetchChatlistInvites', { folderId });\n\n  if (!result) return;\n\n  global = getGlobal();\n\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: result.invites,\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('createChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { folderId, tabId = getCurrentTabId() } = payload;\n\n  const folder = selectChatFolder(global, folderId);\n  if (!folder) return;\n\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...selectTabState(global, tabId).shareFolderScreen!,\n      isLoading: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  let result: { filter: ApiChatFolder; invite: ApiChatlistExportedInvite | undefined } | undefined;\n\n  try {\n    result = await callApi('createChalistInvite', {\n      folderId,\n      peers: folder.includedChatIds.concat(folder.pinnedChatIds || [])\n        .map((chatId) => selectChat(global, chatId) || selectUser(global, chatId)).filter(Boolean),\n    });\n  } catch (error) {\n    if (CHATLIST_LIMIT_ERROR_LIST.has((error as ApiError).message)) {\n      actions.openLimitReachedModal({ limit: 'chatlistInvites', tabId });\n      actions.requestNextSettingsScreen({ screen: SettingsScreens.Folders, tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n  }\n\n  if (!result || !result.invite) return;\n\n  const { shareFolderScreen } = selectTabState(global, tabId);\n\n  if (!shareFolderScreen) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      byId: {\n        ...global.chatFolders.byId,\n        [folderId]: {\n          ...global.chatFolders.byId[folderId],\n          ...result.filter,\n        },\n      },\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: [\n          ...(global.chatFolders.invites[folderId] || []),\n          result.invite,\n        ],\n      },\n    },\n  };\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...shareFolderScreen,\n      url: result.invite.url,\n      isLoading: false,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\naddActionHandler('editChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const {\n    folderId, peerIds, url, tabId = getCurrentTabId(),\n  } = payload;\n\n  const slug = url.split('/').pop();\n  if (!slug) return;\n\n  const peers = peerIds\n    .map((chatId) => selectChat(global, chatId) || selectUser(global, chatId)).filter(Boolean);\n\n  global = updateTabState(global, {\n    shareFolderScreen: {\n      ...selectTabState(global, tabId).shareFolderScreen!,\n      isLoading: true,\n    },\n  }, tabId);\n  setGlobal(global);\n\n  try {\n    const result = await callApi('editChatlistInvite', { folderId, slug, peers });\n\n    if (!result) {\n      return;\n    }\n\n    global = getGlobal();\n    global = {\n      ...global,\n      chatFolders: {\n        ...global.chatFolders,\n        invites: {\n          ...global.chatFolders.invites,\n          [folderId]: global.chatFolders.invites[folderId]?.map((invite) => {\n            if (invite.url === url) {\n              return result;\n            }\n            return invite;\n          }),\n        },\n      },\n    };\n    setGlobal(global);\n  } catch (error) {\n    actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n  } finally {\n    global = getGlobal();\n\n    global = updateTabState(global, {\n      shareFolderScreen: {\n        ...selectTabState(global, tabId).shareFolderScreen!,\n        isLoading: false,\n      },\n    }, tabId);\n    setGlobal(global);\n  }\n});\n\naddActionHandler('deleteChatlistInvite', async (global, actions, payload): Promise<void> => {\n  const { folderId, url } = payload;\n\n  const slug = url.split('/').pop();\n\n  if (!slug) return;\n\n  const result = await callApi('deleteChatlistInvite', { folderId, slug });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = {\n    ...global,\n    chatFolders: {\n      ...global.chatFolders,\n      invites: {\n        ...global.chatFolders.invites,\n        [folderId]: global.chatFolders.invites[folderId]?.filter((invite) => invite.url !== url),\n      },\n    },\n  };\n  setGlobal(global);\n});\n\naddActionHandler('openDeleteChatFolderModal', async (global, actions, payload): Promise<void> => {\n  const { folderId, isConfirmedForChatlist, tabId = getCurrentTabId() } = payload;\n  const folder = selectChatFolder(global, folderId);\n  if (!folder) return;\n\n  if (folder.isChatList && (!folder.hasMyInvites || isConfirmedForChatlist)) {\n    const suggestions = await callApi('fetchLeaveChatlistSuggestions', { folderId });\n    global = getGlobal();\n    global = updateTabState(global, {\n      chatlistModal: {\n        removal: {\n          folderId,\n          suggestedPeerIds: suggestions,\n        },\n      },\n    }, tabId);\n    setGlobal(global);\n    return;\n  }\n\n  global = updateTabState(global, {\n    deleteFolderDialogModal: folderId,\n  }, tabId);\n\n  setGlobal(global);\n});\n\naddActionHandler('updateChatDetectedLanguage', (global, actions, payload): ActionReturnType => {\n  const { chatId, detectedLanguage } = payload;\n\n  global = getGlobal();\n  global = updateChat(global, chatId, {\n    detectedLanguage,\n  }, undefined, true);\n\n  return global;\n});\n\naddActionHandler('togglePeerTranslations', async (global, actions, payload): Promise<void> => {\n  const { chatId, isEnabled } = payload;\n  const chat = selectChat(global, chatId);\n  if (!chat) return;\n\n  const result = await callApi('togglePeerTranslations', { chat, isEnabled });\n\n  if (result === undefined) return;\n\n  global = getGlobal();\n  global = updatePeerFullInfo(global, chatId, {\n    isTranslationDisabled: isEnabled ? undefined : true,\n  });\n  setGlobal(global);\n});\n\naddActionHandler('setViewForumAsMessages', (global, actions, payload): ActionReturnType => {\n  const { chatId, isEnabled } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat?.isForum || chat.isForumAsMessages === isEnabled) {\n    return;\n  }\n\n  global = updateChat(global, chatId, { isForumAsMessages: isEnabled || undefined });\n  setGlobal(global);\n\n  void callApi('setViewForumAsMessages', { chat, isEnabled });\n});\n\naddActionHandler('loadChannelRecommendations', async (global, actions, payload): Promise<void> => {\n  const { chatId } = payload;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n\n  if (chatId && !chat) {\n    return;\n  }\n\n  if (!chatId) {\n    const similarChannelIds = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID);\n    if (similarChannelIds) return; // Already cached\n  }\n\n  const result = await callApi('fetchChannelRecommendations', {\n    chat,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { similarChannels, count } = result;\n\n  const chatsById = buildCollectionByKey(similarChannels, 'id');\n\n  global = getGlobal();\n  global = addSimilarChannels(global, chatId || GLOBAL_SUGGESTED_CHANNELS_ID, Object.keys(chatsById), count);\n  setGlobal(global);\n});\n\naddActionHandler('toggleChannelRecommendations', (global, actions, payload): ActionReturnType => {\n  const { chatId } = payload;\n  const chat = selectChat(global, chatId);\n\n  if (!chat) {\n    return;\n  }\n\n  global = toggleSimilarChannels(global, chatId);\n  setGlobal(global);\n});\n\naddActionHandler('resolveBusinessChatLink', async (global, actions, payload): Promise<void> => {\n  const { slug, tabId = getCurrentTabId() } = payload;\n  const result = await callApi('resolveBusinessChatLink', { slug });\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('BusinessLink.ErrorExpired'),\n      tabId,\n    });\n    return;\n  }\n\n  const { chatLink } = result;\n\n  actions.openChatWithDraft({\n    chatId: chatLink.chatId,\n    text: chatLink.text,\n    tabId,\n  });\n});\n\naddActionHandler('requestCollectibleInfo', async (global, actions, payload): Promise<void> => {\n  const {\n    type, collectible, peerId, tabId = getCurrentTabId(),\n  } = payload;\n\n  let inputCollectible;\n  if (type === 'phone') {\n    inputCollectible = { phone: collectible };\n  }\n  if (type === 'username') {\n    inputCollectible = { username: collectible };\n  }\n  if (!inputCollectible) return;\n\n  const result = await callApi('fetchCollectionInfo', inputCollectible);\n  if (!result) {\n    copyTextToClipboard(collectible);\n    return;\n  }\n\n  global = getGlobal();\n  global = updateTabState(global, {\n    collectibleInfoModal: {\n      ...result,\n      type,\n      collectible,\n      peerId,\n    },\n  }, tabId);\n  setGlobal(global);\n});\n\nasync function loadChats(\n  listType: ChatListType,\n  isFullDraftSync?: boolean,\n  shouldIgnorePagination?: boolean,\n) {\n  // eslint-disable-next-line eslint-multitab-tt/no-immediate-global\n  let global = getGlobal();\n  let lastLocalServiceMessageId = selectLastServiceNotification(global)?.id;\n\n  const params = !shouldIgnorePagination ? selectChatListLoadingParameters(global, listType) : {};\n  const offsetPeer = params.nextOffsetPeerId ? selectPeer(global, params.nextOffsetPeerId) : undefined;\n  const offsetDate = params.nextOffsetDate;\n  const offsetId = params.nextOffsetId;\n\n  const isFirstBatch = !shouldIgnorePagination && !offsetPeer && !offsetDate && !offsetId;\n\n  const result = listType === 'saved' ? await callApi('fetchSavedChats', {\n    limit: CHAT_LIST_LOAD_SLICE,\n    offsetDate,\n    offsetId,\n    offsetPeer,\n    withPinned: isFirstBatch,\n  }) : await callApi('fetchChats', {\n    limit: CHAT_LIST_LOAD_SLICE,\n    offsetDate,\n    offsetId,\n    offsetPeer,\n    archived: listType === 'archived',\n    withPinned: isFirstBatch,\n    lastLocalServiceMessageId,\n  });\n\n  if (!result) {\n    return;\n  }\n\n  const { chatIds } = result;\n\n  global = getGlobal();\n  lastLocalServiceMessageId = selectLastServiceNotification(global)?.id;\n\n  const newChats = buildCollectionByKey(result.chats, 'id');\n\n  global = updateUsers(global, buildCollectionByKey(result.users, 'id'));\n  global = updateChats(global, newChats);\n  if (isFirstBatch) {\n    global = replaceChatListIds(global, listType, chatIds);\n    global = replaceUserStatuses(global, result.userStatusesById);\n  } else {\n    global = addChatListIds(global, listType, chatIds);\n    global = addUserStatuses(global, result.userStatusesById);\n  }\n\n  global = updateChatListSecondaryInfo(global, listType, result);\n  global = replaceMessages(global, result.messages);\n  global = updateChatsLastMessageId(global, result.lastMessageByChatId, listType);\n\n  if (!shouldIgnorePagination) {\n    global = replaceChatListLoadingParameters(\n      global, listType, result.nextOffsetId, result.nextOffsetPeerId, result.nextOffsetDate,\n    );\n  }\n\n  const idsToUpdateDraft = isFullDraftSync ? result.chatIds : Object.keys(result.draftsById);\n  idsToUpdateDraft.forEach((chatId) => {\n    const draft = result.draftsById[chatId];\n    const thread = selectThread(global, chatId, MAIN_THREAD_ID);\n\n    if (!draft && !thread) return;\n\n    if (!selectDraft(global, chatId, MAIN_THREAD_ID)?.isLocal) {\n      global = replaceThreadParam(\n        global, chatId, MAIN_THREAD_ID, 'draft', draft,\n      );\n    }\n  });\n\n  if ((chatIds.length === 0 || chatIds.length === result.totalChatCount) && !global.chats.isFullyLoaded[listType]) {\n    global = {\n      ...global,\n      chats: {\n        ...global.chats,\n        isFullyLoaded: {\n          ...global.chats.isFullyLoaded,\n          [listType]: true,\n        },\n      },\n    };\n  }\n\n  setGlobal(global);\n}\n\nexport async function loadFullChat<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, chat: ApiChat,\n) {\n  const result = await callApi('fetchFullChat', chat);\n  if (!result) {\n    return undefined;\n  }\n\n  const {\n    chats, userStatusesById, fullInfo, groupCall, membersCount, isForumAsMessages,\n  } = result;\n\n  global = getGlobal();\n  global = updateChats(global, buildCollectionByKey(chats, 'id'));\n\n  if (userStatusesById) {\n    global = addUserStatuses(global, userStatusesById);\n  }\n\n  if (groupCall) {\n    const existingGroupCall = selectGroupCall(global, groupCall.id!);\n    global = updateGroupCall(\n      global,\n      groupCall.id!,\n      omit(groupCall, ['connectionState', 'isLoaded']),\n      undefined,\n      existingGroupCall ? undefined : groupCall.participantsCount,\n    );\n  }\n\n  if (membersCount !== undefined) {\n    global = updateChat(global, chat.id, { membersCount });\n  }\n  if (chat.isForum) {\n    global = updateChat(global, chat.id, { isForumAsMessages });\n  }\n  global = replaceChatFullInfo(global, chat.id, fullInfo);\n  setGlobal(global);\n\n  const stickerSet = fullInfo.stickerSet;\n  const localSet = stickerSet && selectStickerSet(global, stickerSet);\n  if (stickerSet && !localSet) {\n    actions.loadStickers({\n      stickerSetInfo: {\n        id: stickerSet.id,\n        accessHash: stickerSet.accessHash,\n      },\n    });\n  }\n\n  const emojiSet = fullInfo.emojiSet;\n  const localEmojiSet = emojiSet && selectStickerSet(global, emojiSet);\n  if (emojiSet && !localEmojiSet) {\n    actions.loadStickers({\n      stickerSetInfo: {\n        id: emojiSet.id,\n        accessHash: emojiSet.accessHash,\n      },\n    });\n  }\n\n  return result;\n}\n\nexport async function migrateChat<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, chat: ApiChat,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n): Promise<ApiChat | undefined> {\n  try {\n    const supergroup = await callApi('migrateChat', chat);\n\n    return supergroup;\n  } catch (error) {\n    if ((error as ApiError).message === 'CHANNELS_TOO_MUCH') {\n      actions.openLimitReachedModal({ limit: 'channels', tabId });\n    } else {\n      actions.showDialog({ data: { ...(error as ApiError), hasErrorKey: true }, tabId });\n    }\n\n    return undefined;\n  }\n}\n\nexport async function fetchChatByUsername<T extends GlobalState>(\n  global: T,\n  username: string,\n  referrer?: string,\n) {\n  global = getGlobal();\n  const localChat = !referrer ? selectChatByUsername(global, username) : undefined;\n  if (localChat && !localChat.isMin) {\n    return localChat;\n  }\n\n  const { chat, user } = await callApi('getChatByUsername', username, referrer) || {};\n  if (!chat) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, chat);\n  if (user) {\n    global = updateUser(global, user.id, user);\n  }\n\n  setGlobal(global);\n\n  return chat;\n}\n\nexport async function checkWebAppExists<T extends GlobalState>(\n  global: T, botName: string, appName: string,\n) {\n  if (!botName || !appName) return false;\n  global = getGlobal();\n  const chatByUsername = await fetchChatByUsername(global, botName);\n  global = getGlobal();\n  const bot = chatByUsername && selectUser(global, chatByUsername.id);\n  const botApp = bot && await callApi('fetchBotApp', {\n    bot,\n    appName,\n  });\n  return Boolean(botApp);\n}\n\nexport async function fetchChatByPhoneNumber<T extends GlobalState>(global: T, phoneNumber: string) {\n  global = getGlobal();\n  const localUser = selectUserByPhoneNumber(global, phoneNumber);\n  if (localUser && !localUser.isMin) {\n    return selectChat(global, localUser.id);\n  }\n\n  const { chat, user } = await callApi('getChatByPhoneNumber', phoneNumber) || {};\n  if (!chat) {\n    return undefined;\n  }\n\n  global = getGlobal();\n  global = updateChat(global, chat.id, chat);\n\n  if (user) {\n    global = updateUser(global, user.id, user);\n  }\n  setGlobal(global);\n\n  return chat;\n}\n\nasync function getAttachBotOrNotify<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, username: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chat = await fetchChatByUsername(global, username);\n  if (!chat) return undefined;\n\n  global = getGlobal();\n  const user = selectUser(global, chat.id);\n  if (!user) return undefined;\n\n  const isBot = isUserBot(user);\n  if (!isBot) return undefined;\n  const result = await callApi('loadAttachBot', {\n    bot: user,\n  });\n\n  global = getGlobal();\n  if (!result) {\n    actions.showNotification({\n      message: langProvider.oldTranslate('WebApp.AddToAttachmentUnavailableError'),\n      tabId,\n    });\n\n    return undefined;\n  }\n  setGlobal(global);\n\n  return result.bot;\n}\n\nasync function openChatByUsername<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  params: {\n    username: string;\n    threadId?: ThreadId;\n    channelPostId?: number;\n    startParam?: string;\n    ref?: string;\n    startAttach?: string;\n    attach?: string;\n    text?: string;\n  },\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const {\n    username, threadId, channelPostId, startParam, ref, startAttach, attach, text,\n  } = params;\n  global = getGlobal();\n  const currentChat = selectCurrentChat(global, tabId);\n\n  // Attach in the current chat\n  if (startAttach !== undefined && !attach) {\n    const bot = await getAttachBotOrNotify(global, actions, username, tabId);\n\n    if (!bot) return;\n\n    actions.callAttachBot({\n      bot,\n      chatId: currentChat?.id || bot.id,\n      startParam: startAttach,\n      tabId,\n    });\n\n    return;\n  }\n\n  const isCurrentChat = currentChat?.usernames?.some((c) => c.username === username);\n\n  if (!isCurrentChat) {\n    // Open temporary empty chat to make the click response feel faster\n    actions.openChat({ id: TMP_CHAT_ID, tabId });\n  }\n\n  const starRefStartPrefixes = global.appConfig?.starRefStartPrefixes;\n  let referrer = ref;\n  if (startParam && starRefStartPrefixes?.length) {\n    const prefix = starRefStartPrefixes.find((p) => startParam.startsWith(p));\n    if (prefix) {\n      referrer = startParam.slice(prefix.length);\n    }\n  }\n\n  const chat = await fetchChatByUsername(global, username, referrer);\n  if (!chat) {\n    if (!isCurrentChat) {\n      actions.openPreviousChat({ tabId });\n      actions.showNotification({ message: 'User does not exist', tabId });\n    }\n\n    return;\n  }\n\n  if (channelPostId) {\n    actions.focusMessage({\n      chatId: chat.id, threadId, messageId: channelPostId, tabId,\n    });\n  } else if (!isCurrentChat) {\n    actions.openThread({ chatId: chat.id, threadId: threadId ?? MAIN_THREAD_ID, tabId });\n  }\n\n  if (startParam && !referrer) {\n    actions.startBot({ botId: chat.id, param: startParam });\n  }\n\n  if (attach) {\n    global = getGlobal();\n    openAttachMenuFromLink(global, actions, chat.id, attach, startAttach, tabId);\n  }\n\n  if (text) {\n    actions.openChatWithDraft({ chatId: chat.id, text: { text }, tabId });\n  }\n}\n\nasync function openAttachMenuFromLink<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  attach: string,\n  startAttach?: string | boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  global = getGlobal();\n  const bot = await getAttachBotOrNotify(global, actions, attach, tabId);\n  if (!bot) return;\n\n  actions.callAttachBot({\n    bot,\n    chatId,\n    ...(typeof startAttach === 'string' && { startParam: startAttach }),\n    tabId,\n  });\n}\n\nexport async function ensureIsSuperGroup<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions,\n  chatId: string,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  const chat = selectChat(global, chatId);\n  if (!chat || !isChatBasicGroup(chat)) {\n    return chat;\n  }\n\n  const newChat = await migrateChat(global, actions, chat, tabId);\n  if (!newChat) {\n    return undefined;\n  }\n\n  actions.loadFullChat({ chatId: newChat.id });\n  actions.openChat({ id: newChat.id, tabId });\n\n  return newChat;\n}\n","import type { ApiGroupCall } from '../../../api/types';\nimport type { RequiredGlobalActions } from '../../index';\nimport type {\n  ActionReturnType, CallSound, GlobalState, TabArgs,\n} from '../../types';\n\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { getCurrentTabId } from '../../../util/establishMultitabRole';\nimport { omit } from '../../../util/iteratees';\nimport * as langProvider from '../../../util/oldLangProvider';\nimport safePlay from '../../../util/safePlay';\nimport { ARE_CALLS_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport { getMainUsername } from '../../helpers';\nimport {\n  addActionHandler, getGlobal,\n  setGlobal,\n} from '../../index';\nimport { updateGroupCall } from '../../reducers/calls';\nimport { updateTabState } from '../../reducers/tabs';\nimport {\n  selectChat, selectChatFullInfo, selectTabState, selectUser,\n} from '../../selectors';\nimport { selectActiveGroupCall, selectChatGroupCall, selectGroupCall } from '../../selectors/calls';\nimport { fetchChatByUsername, loadFullChat } from '../api/chats';\n\n// This is a tiny MP3 file that is silent - retrieved from https://bigsoundbank.com and then modified\n// eslint-disable-next-line max-len\nconst silentSound = 'data:audio/mpeg;base64,SUQzBAAAAAABEVRYWFgAAAAtAAADY29tbWVudABCaWdTb3VuZEJhbmsuY29tIC8gTGFTb25vdGhlcXVlLm9yZwBURU5DAAAAHQAAA1N3aXRjaCBQbHVzIMKpIE5DSCBTb2Z0d2FyZQBUSVQyAAAABgAAAzIyMzUAVFNTRQAAAA8AAANMYXZmNTcuODMuMTAwAAAAAAAAAAAAAAD/80DEAAAAA0gAAAAATEFNRTMuMTAwVVVVVVVVVVVVVUxBTUUzLjEwMFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQsRbAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVf/zQMSkAAADSAAAAABVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV';\n\nlet audioElement: HTMLAudioElement | undefined;\nlet audioContext: AudioContext | undefined;\nlet sounds: Record<CallSound, HTMLAudioElement>;\n\n// Workaround: this function is called once on the first user interaction.\n// After that, it will be possible to play the notification on iOS without problems.\n// https://rosswintle.uk/2019/01/skirting-the-ios-safari-audio-auto-play-policy-for-ui-sound-effects/\nexport function initializeSoundsForSafari() {\n  initializeSounds();\n\n  return Promise.all(Object.values(sounds).map((sound) => {\n    const prevSrc = sound.src;\n    sound.src = silentSound;\n    sound.muted = true;\n    sound.volume = 0.0001;\n    return sound.play()\n      .then(() => {\n        sound.pause();\n        sound.volume = 1;\n        sound.currentTime = 0;\n        sound.muted = false;\n\n        requestNextMutation(() => {\n          sound.src = prevSrc;\n        });\n      });\n  }));\n}\n\nexport function initializeSounds() {\n  if (sounds) {\n    return;\n  }\n  const joinAudio = new Audio('./voicechat_join.mp3');\n  const connectingAudio = new Audio('./voicechat_connecting.mp3');\n  connectingAudio.loop = true;\n  const leaveAudio = new Audio('./voicechat_leave.mp3');\n  const allowTalkAudio = new Audio('./voicechat_onallowtalk.mp3');\n  const busyAudio = new Audio('./call_busy.mp3');\n  const connectAudio = new Audio('./call_connect.mp3');\n  const endAudio = new Audio('./call_end.mp3');\n  const incomingAudio = new Audio('./call_incoming.mp3');\n  incomingAudio.loop = true;\n  const ringingAudio = new Audio('./call_ringing.mp3');\n  ringingAudio.loop = true;\n\n  sounds = {\n    join: joinAudio,\n    allowTalk: allowTalkAudio,\n    leave: leaveAudio,\n    connecting: connectingAudio,\n    incoming: incomingAudio,\n    end: endAudio,\n    connect: connectAudio,\n    busy: busyAudio,\n    ringing: ringingAudio,\n  };\n}\n\nasync function fetchGroupCall<T extends GlobalState>(global: T, groupCall: Partial<ApiGroupCall>) {\n  const result = await callApi('getGroupCall', {\n    call: groupCall,\n  });\n\n  if (!result) return undefined;\n\n  global = getGlobal();\n\n  const existingGroupCall = selectGroupCall(global, groupCall.id!);\n\n  global = updateGroupCall(\n    global,\n    groupCall.id!,\n    omit(result.groupCall, ['connectionState']),\n    undefined,\n    existingGroupCall?.isLoaded ? undefined : result.groupCall.participantsCount,\n  );\n\n  setGlobal(global);\n\n  return result.groupCall;\n}\n\nfunction requestGroupCallParticipants(\n  groupCall: Partial<ApiGroupCall>, nextOffset?: string,\n) {\n  return callApi('fetchGroupCallParticipants', {\n    call: groupCall as ApiGroupCall,\n    offset: nextOffset,\n  });\n}\n\naddActionHandler('toggleGroupCallPanel', (global, actions, payload): ActionReturnType => {\n  const { force, tabId = getCurrentTabId() } = payload || {};\n  return updateTabState(global, {\n    isCallPanelVisible: 'force' in (payload || {}) ? force : !selectTabState(global, tabId).isCallPanelVisible,\n  }, tabId);\n});\n\naddActionHandler('subscribeToGroupCallUpdates', async (global, actions, payload): Promise<void> => {\n  const { subscribed, id } = payload!;\n  const groupCall = selectGroupCall(global, id);\n\n  if (!groupCall) return;\n\n  if (subscribed) {\n    await fetchGroupCall(global, groupCall);\n    global = getGlobal();\n    await requestGroupCallParticipants(groupCall);\n  }\n\n  await callApi('toggleGroupCallStartSubscription', {\n    subscribed,\n    call: groupCall,\n  });\n});\n\naddActionHandler('createGroupCall', async (global, actions, payload): Promise<void> => {\n  const { chatId, tabId = getCurrentTabId() } = payload;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) {\n    return;\n  }\n\n  const result = await callApi('createGroupCall', {\n    peer: chat,\n  });\n\n  if (!result) return;\n\n  global = getGlobal();\n  global = updateGroupCall(global, result.id, {\n    ...result,\n    chatId,\n  });\n  setGlobal(global);\n\n  actions.requestMasterAndJoinGroupCall({ id: result.id, accessHash: result.accessHash, tabId });\n});\n\naddActionHandler('createGroupCallInviteLink', async (global, actions, payload): Promise<void> => {\n  const { tabId = getCurrentTabId() } = payload || {};\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n\n  let inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  if (hasPublicUsername) {\n    inviteLink = await callApi('exportGroupCallInvite', {\n      call: groupCall,\n      canSelfUnmute: false,\n    });\n  }\n\n  if (!inviteLink) {\n    return;\n  }\n\n  copyTextToClipboard(inviteLink);\n  actions.showNotification({\n    message: {\n      key: 'LinkCopied',\n    },\n    tabId,\n  });\n});\n\naddActionHandler('joinVoiceChatByLink', async (global, actions, payload): Promise<void> => {\n  const { username, inviteHash, tabId = getCurrentTabId() } = payload;\n\n  const chat = await fetchChatByUsername(global, username);\n\n  if (!chat) {\n    actions.showNotification({ message: langProvider.oldTranslate('NoUsernameFound'), tabId });\n    return;\n  }\n\n  global = getGlobal();\n  const full = await loadFullChat(global, actions, chat);\n\n  if (full?.groupCall) {\n    actions.requestMasterAndJoinGroupCall({\n      id: full.groupCall.id,\n      accessHash: full.groupCall.accessHash,\n      inviteHash,\n      tabId,\n    });\n  }\n});\n\naddActionHandler('requestMasterAndJoinGroupCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'joinGroupCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestMasterAndAcceptCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'acceptCall',\n    payload: undefined,\n    tabId: payload?.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('joinGroupCall', async (global, actions, payload): Promise<void> => {\n  const {\n    chatId, id, accessHash, inviteHash, tabId = getCurrentTabId(),\n  } = payload;\n\n  if (!ARE_CALLS_SUPPORTED) {\n    actions.showNotification({\n      message: \"Sorry, your browser doesn't support group calls\",\n      tabId,\n    });\n    return;\n  }\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  createAudioElement();\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, true, tabId);\n\n  const { groupCalls: { activeGroupCallId } } = global;\n  let groupCall = id ? selectGroupCall(global, id) : selectChatGroupCall(global, chatId!);\n\n  if (groupCall && groupCall.id === activeGroupCallId) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (activeGroupCallId) {\n    if ('leaveGroupCall' in actions) {\n      actions.leaveGroupCall({\n        rejoin: payload,\n        tabId,\n      });\n    }\n    return;\n  }\n\n  if (groupCall && activeGroupCallId === groupCall.id) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  if (!groupCall && (!id || !accessHash) && chatId) {\n    const chat = selectChat(global, chatId);\n\n    if (!chat) return;\n\n    await loadFullChat(global, actions, chat);\n    global = getGlobal();\n    groupCall = selectChatGroupCall(global, chatId);\n  } else if (!groupCall && id && accessHash) {\n    groupCall = await fetchGroupCall(global, {\n      id,\n      accessHash,\n    });\n  }\n\n  if (!groupCall) return;\n\n  global = getGlobal();\n  global = updateGroupCall(\n    global,\n    groupCall.id,\n    {\n      ...groupCall,\n      inviteHash,\n    },\n    undefined,\n    groupCall.participantsCount + 1,\n  );\n  global = {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      activeGroupCallId: groupCall.id,\n    },\n  };\n\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\naddActionHandler('playGroupCallSound', (global, actions, payload): ActionReturnType => {\n  const { sound } = payload!;\n\n  if (!sounds[sound]) {\n    return;\n  }\n\n  const doPlay = () => {\n    if (sound !== 'connecting') {\n      sounds.connecting.pause();\n    }\n    if (sound !== 'incoming') {\n      sounds.incoming.pause();\n    }\n    if (sound !== 'ringing') {\n      sounds.ringing.pause();\n    }\n    safePlay(sounds[sound]);\n  };\n\n  doPlay();\n});\n\naddActionHandler('loadMoreGroupCallParticipants', (global): ActionReturnType => {\n  const groupCall = selectActiveGroupCall(global);\n  if (!groupCall) {\n    return;\n  }\n\n  void requestGroupCallParticipants(groupCall, groupCall.nextOffset);\n});\n\naddActionHandler('requestMasterAndRequestCall', (global, actions, payload): ActionReturnType => {\n  actions.requestMasterAndCallAction({\n    action: 'requestCall',\n    payload,\n    tabId: payload.tabId || getCurrentTabId(),\n  });\n});\n\naddActionHandler('requestCall', (global, actions, payload): ActionReturnType => {\n  const { userId, isVideo, tabId = getCurrentTabId() } = payload;\n\n  if (global.phoneCall) {\n    actions.toggleGroupCallPanel({ tabId });\n    return;\n  }\n\n  const user = selectUser(global, userId);\n\n  if (!user) {\n    return;\n  }\n\n  initializeSounds();\n  global = getGlobal();\n  void checkNavigatorUserMediaPermissions(global, actions, isVideo, tabId);\n\n  global = getGlobal();\n  global = {\n    ...global,\n    phoneCall: {\n      id: '',\n      state: 'requesting',\n      participantId: userId,\n      isVideo,\n      adminId: global.currentUserId,\n    },\n  };\n  setGlobal(global);\n\n  actions.toggleGroupCallPanel({ force: false, tabId });\n});\n\nfunction createAudioContext() {\n  return (new (window.AudioContext || (window as any).webkitAudioContext)());\n}\n\nconst silence = (ctx: AudioContext) => {\n  const oscillator = ctx.createOscillator();\n  const dst = oscillator.connect(ctx.createMediaStreamDestination());\n  oscillator.start();\n  return new MediaStream([Object.assign((dst as any).stream.getAudioTracks()[0], { enabled: false })]);\n};\n\nfunction createAudioElement() {\n  const ctx = createAudioContext();\n  audioElement = new Audio();\n  audioContext = ctx;\n  audioElement.srcObject = silence(ctx);\n  safePlay(audioElement);\n}\n\nexport function getGroupCallAudioElement() {\n  return audioElement;\n}\n\nexport function getGroupCallAudioContext() {\n  return audioContext;\n}\n\nexport function removeGroupCallAudioElement() {\n  audioElement?.pause();\n  audioContext = undefined;\n  audioElement = undefined;\n}\n\n// This method is used instead of a navigator.permissions.query to determine permission to use a microphone,\n// because Firefox does not have support for 'microphone' and 'camera' permissions\n// https://github.com/mozilla/standards-positions/issues/19#issuecomment-370158947\nexport function checkNavigatorUserMediaPermissions<T extends GlobalState>(\n  global: T,\n  actions: RequiredGlobalActions, isVideo?: boolean,\n  ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  if (isVideo) {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        if (stream.getVideoTracks().length === 0) {\n          actions.showNotification({\n            message: langProvider.oldTranslate('Call.Camera.Error'),\n            tabId,\n          });\n        } else {\n          stream.getTracks().forEach((track) => track.stop());\n          checkMicrophonePermission(global, actions, tabId);\n        }\n      })\n      .catch(() => {\n        actions.showNotification({\n          message: langProvider.oldTranslate('Call.Camera.Error'),\n          tabId,\n        });\n      });\n  } else {\n    checkMicrophonePermission(global, actions, tabId);\n  }\n}\n\nfunction checkMicrophonePermission<T extends GlobalState>(\n  global: T, actions: RequiredGlobalActions, ...[tabId = getCurrentTabId()]: TabArgs<T>\n) {\n  navigator.mediaDevices.getUserMedia({ audio: true })\n    .then((stream) => {\n      if (stream.getAudioTracks().length === 0) {\n        actions.showNotification({\n          message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n          tabId,\n        });\n      } else {\n        stream.getTracks().forEach((track) => track.stop());\n      }\n    })\n    .catch(() => {\n      actions.showNotification({\n        message: langProvider.oldTranslate('RequestAcces.Error.HaveNotAccess.Call'),\n        tabId,\n      });\n    });\n}\n","import type { ApiGroupCall } from '../../api/types';\nimport type { GroupCallParticipant } from '../../lib/secret-sauce';\nimport type { GlobalState } from '../types';\n\nimport { omit } from '../../util/iteratees';\nimport { selectChat } from '../selectors';\nimport { selectGroupCall } from '../selectors/calls';\nimport { updateChatFullInfo } from './chats';\n\nexport function updateGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n  groupCallUpdate: Partial<ApiGroupCall>,\n  addToParticipantCount?: number,\n  resetParticipantCount?: number,\n): T {\n  const unfiltered = Object.values({\n    ...global.groupCalls.byId[groupCallId]?.participants,\n    ...groupCallUpdate.participants,\n  });\n  const filtered = unfiltered.filter(({ isLeft }) => !isLeft);\n  const participants = filtered.reduce((acc: Record<string, GroupCallParticipant>, el) => {\n    acc[el.id] = el;\n    return acc;\n  }, {});\n\n  return {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      byId: {\n        ...global.groupCalls.byId,\n        [groupCallId]: {\n          ...global.groupCalls.byId[groupCallId],\n          ...omit(groupCallUpdate, ['participantsCount']),\n          ...(addToParticipantCount && {\n            participantsCount: global.groupCalls.byId[groupCallId].participantsCount + addToParticipantCount,\n          }),\n          ...(resetParticipantCount !== undefined && {\n            participantsCount: resetParticipantCount,\n          }),\n          participants,\n        },\n      },\n    },\n  };\n}\n\nexport function removeGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n): T {\n  const groupCall = selectGroupCall(global, groupCallId);\n  if (groupCall && groupCall.chatId) {\n    const chat = selectChat(global, groupCall.chatId);\n    if (chat) {\n      global = updateChatFullInfo(global, groupCall.chatId, {\n        groupCallId: undefined,\n      });\n    }\n  }\n\n  return {\n    ...global,\n    groupCalls: {\n      ...global.groupCalls,\n      byId: {\n        ...omit(global.groupCalls.byId, [groupCallId.toString()]),\n      },\n    },\n  };\n}\n\nexport function updateActiveGroupCall<T extends GlobalState>(\n  global: T,\n  groupCallUpdate: Partial<ApiGroupCall>,\n  resetParticipantCount?: number,\n): T {\n  if (!global.groupCalls.activeGroupCallId) {\n    return global;\n  }\n\n  return updateGroupCall(global,\n    global.groupCalls.activeGroupCallId,\n    groupCallUpdate,\n    undefined,\n    resetParticipantCount);\n}\n\nexport function updateGroupCallParticipant<T extends GlobalState>(\n  global: T,\n  groupCallId: string,\n  userId: string,\n  participantUpdate: Partial<GroupCallParticipant>,\n  noUpdateCount = false,\n): T {\n  const groupCall = selectGroupCall(global, groupCallId);\n  if (!groupCall) {\n    return global;\n  }\n\n  return updateGroupCall(global, groupCallId, {\n    participants: {\n      ...groupCall.participants,\n      [userId]: {\n        ...groupCall.participants[userId],\n        ...participantUpdate,\n      },\n    },\n  }, participantUpdate.isLeft\n    ? (noUpdateCount ? 0 : -1)\n    : (groupCall.participants[userId] || noUpdateCount ? 0 : 1));\n}\n"],"names":["MAIN_THREAD_ID","ChatCreationProgress","ManagementProgress","NewChatMembersProgress","SettingsScreens","ALL_FOLDER_ID","ARCHIVED_FOLDER_ID","CHAT_LIST_LOAD_SLICE","DEBUG","GLOBAL_SUGGESTED_CHANNELS_ID","RE_TG_LINK","SAVED_FOLDER_ID","SERVICE_NOTIFICATIONS_USER_ID","TME_WEB_DOMAINS","TMP_CHAT_ID","TOP_CHAT_MESSAGES_PRELOAD_LIMIT","TOPICS_SLICE","TOPICS_SLICE_SECOND_LOAD","copyTextToClipboard","formatShareText","processDeepLink","isDeepLink","getCurrentTabId","getOrderedIds","buildCollectionByKey","omit","pick","isLocalMessageId","langProvider","debounce","pause","throttle","extractCurrentThemeParams","callApi","getIsSavedDialog","isChatArchived","isChatBasicGroup","isChatChannel","isChatSuperGroup","isUserBot","toChannelId","addActionHandler","getGlobal","setGlobal","addChatListIds","addChatMembers","addChats","addMessages","addSimilarChannels","addUsers","addUserStatuses","deleteChatMessages","deletePeerPhoto","deleteTopic","leaveChat","removeChatFromChatLists","replaceChatFullInfo","replaceChatListIds","replaceChatListLoadingParameters","replaceMessages","replaceThreadParam","replaceUserStatuses","toggleSimilarChannels","updateChat","updateChatFullInfo","updateChatLastMessageId","updateChatListSecondaryInfo","updateChats","updateChatsLastMessageId","updateListedTopicIds","updateManagementProgress","updateMissingInvitedUsers","updatePeerFullInfo","updateThread","updateThreadInfo","updateTopic","updateTopics","updateUser","updateUsers","updateGroupCall","updateTabState","selectChat","selectChatByUsername","selectChatFolder","selectChatFullInfo","selectChatLastMessageId","selectChatListLoadingParameters","selectChatListType","selectChatMessages","selectCurrentChat","selectCurrentMessageList","selectDraft","selectIsChatPinned","selectIsChatWithSelf","selectLastServiceNotification","selectPeer","selectSimilarChannelIds","selectStickerSet","selectSupportChat","selectTabState","selectThread","selectThreadInfo","selectTopic","selectTopics","selectTopicsInfo","selectUser","selectUserByPhoneNumber","selectGroupCall","selectCurrentLimit","TOP_CHAT_MESSAGES_PRELOAD_INTERVAL","INFINITE_LOOP_MARKER","CHATLIST_LIMIT_ERROR_LIST","Set","runThrottledForLoadTopChats","cb","runDebouncedForLoadFullChat","global","actions","preloadedChatIds","i","currentChatIds","Object","values","byTabId","map","id","tabId","chatId","filter","Boolean","folderAllOrderedIds","nextChatId","find","includes","has","add","loadViewportMessages","threadId","abortChatRequests","abortChatRequestsForCurrentChat","newChatId","newThreadId","currentMessageList","currentChatId","currentThreadId","isChatOpened","isThreadOpened","reduce","accHasChatOpened","accHasThreadOpened","otherTabId","otherMessageList","isSameChat","isSameThread","shouldAbortChatRequests","undefined","payload","type","noForumTopicPanel","shouldReplaceHistory","shouldReplaceLast","processOpenChatOrThread","chat","hasUnreadMark","toggleChatUnread","isChatOnlySummary","user","isMin","requestChatUpdate","otherParams","openThread","currentUserId","isComments","focusMessageId","loadingChatId","loadingThreadId","originalChat","openChat","isForum","originChannelId","originMessageId","threadInfo","thread","listedIds","length","Number","loadingThread","loadingMessageId","openPreviousChat","currentGlobal","result","messageId","showNotification","message","oldTranslate","messages","isCommentsInfo","fromChannelId","fromMessageId","firstMessageId","focusMessage","onError","onLoaded","chatFullInfo","fullInfo","linkedChatId","whenFirstBatchDone","listType","isCallbackFired","chats","isFullyLoaded","console","error","connectionState","authState","loadChats","force","withPhotos","loadChat","loadFullChat","loadMoreProfilePhotos","peerId","shouldInvalidateCache","lastLocalMessage","isSavedDialog","limit","forEach","tabChatId","muteUntil","isMuted","topicId","title","about","photo","memberIds","users","chatCreation","progress","InProgress","createdChannel","missingInvitedUsers","channel","missingUsers","Error","openLimitReachedModal","showDialog","data","hasErrorKey","channelId","accessHash","Complete","userId","chatMessages","localMessageIds","keys","createdChat","err","folderId","folder","shouldBePinned","pinnedChatIds","includedChatIds","newPinnedIds","pinnedId","newIncludedChatIds","folderUpdate","isPinned","ids","orderedPinnedIds","saved","chatFolders","recommendedChatFolders","recommended","idsToRemove","idsToAdd","isLimitReached","some","includedId","concat","emoticon","orderedIds","byId","maxId","Math","max","recommendedId","description","newFolder","newId","apiUpdate","requestNextSettingsScreen","foldersAction","folderIds","unreadCount","topic","lastTopicMessageId","lastMessageId","lastReadInboxMessageId","hash","invite","subscriptionFormId","starsPayment","inputInvoice","subscriptionInfo","status","chatInviteModal","inviteInfo","phoneNumber","startAttach","attach","text","fetchChatByPhoneNumber","replace","openChatWithDraft","openAttachMenuFromLink","url","shouldIgnoreCache","openChatByPhoneNumber","checkChatInvite","openStickerSet","joinVoiceChatByLink","openInvoice","checkChatlistInvite","openChatByUsername","openChatByUsernameAction","openStoryViewerByUsername","processBoostParameters","checkGiftCode","isProcessed","match","uri","URL","toLowerCase","startsWith","hostname","pathname","window","open","toString","hostParts","split","adaptedPathname","part1","part2","part3","part","decodeURI","params","fromEntries","searchParams","storyId","hasBoost","hasOwnProperty","substr","startattach","username","stickerSetInfo","shortName","slug","chatOrChannelPostId","commentId","comment","isWebApp","checkWebAppExists","shouldTryOpenChat","isInteger","inviteHash","voicechat","livestream","c","isPrivate","usernameOrId","substring","startParam","start","startApp","startapp","mode","originalParts","openUrl","shouldSkipModal","ignoreDeepLinks","fetchChatByUsername","openBoostModal","onChatChanged","choose","ref","webAppName","usernames","processAttachBotParameters","theme","chatByUsername","hasMainMiniApp","requestMainWebView","botId","channelPostId","action","usernameChat","requestAppWebView","appName","isEnabled","ensureIsSuperGroup","isPreHistoryHidden","bannedRights","updatedFullInfo","members","kickedMembers","isBanned","viewMessages","isUnblocked","m","adminRights","customTitle","chatAfterUpdate","adminMembersById","isDismissed","newAdminMembersById","remove","rest","Promise","all","isDeleted","avatarPhotoId","areProfilesEnabled","areSignaturesEnabled","groups","addedById","group","forDiscussionIds","fullChat","activeChatFolder","maxFolders","isBlocked","requestedDraft","offset","membersCount","userStatusesById","setNewChatMembersDialogState","newChatMembersProgress","Loading","Closed","isProtected","enabledReactions","reactionsLimit","settings","toggleStoryRibbon","isShown","isArchived","forumPanelChatId","bot","getAttachBotOrNotify","isForChat","callAttachBot","isFromSideMenu","attachMenu","bots","requestedAttachBotInstall","onConfirm","requestAttachBotInChat","topicsInfo","listedTopicIds","totalCount","offsetTopic","acc","el","accTopic","offsetTopicId","date","offsetDate","offsetId","count","topics","entries","draftsById","draft","readInboxMessageIdByTopicId","shouldCloseChatOnError","closeForumPanel","openForumPanel","prevIsEnabled","areParticipantsHidden","iconColor","iconEmojiId","createTopicPanel","isLoading","closeCreateTopicPanel","editTopicPanel","closeEditTopicPanel","topicsPinnedLimit","appConfig","chatlistModal","peerIds","peers","notJoinedCount","peer","isNotJoined","folderTitle","invites","shareFolderScreen","screen","Folders","pop","isConfirmedForChatlist","isChatList","hasMyInvites","suggestions","removal","suggestedPeerIds","deleteFolderDialogModal","detectedLanguage","isTranslationDisabled","isForumAsMessages","similarChannelIds","similarChannels","chatsById","chatLink","collectible","inputCollectible","phone","collectibleInfoModal","isFullDraftSync","shouldIgnorePagination","lastLocalServiceMessageId","offsetPeer","nextOffsetPeerId","nextOffsetDate","nextOffsetId","isFirstBatch","withPinned","archived","chatIds","newChats","lastMessageByChatId","idsToUpdateDraft","isLocal","totalChatCount","groupCall","existingGroupCall","participantsCount","stickerSet","localSet","loadStickers","emojiSet","localEmojiSet","migrateChat","supergroup","referrer","localChat","botName","botApp","localUser","isBot","currentChat","isCurrentChat","starRefStartPrefixes","prefix","p","slice","startBot","param","newChat","requestNextMutation","safePlay","ARE_CALLS_SUPPORTED","getMainUsername","selectActiveGroupCall","selectChatGroupCall","silentSound","audioElement","audioContext","sounds","initializeSoundsForSafari","initializeSounds","sound","prevSrc","src","muted","volume","play","then","currentTime","joinAudio","Audio","connectingAudio","loop","leaveAudio","allowTalkAudio","busyAudio","connectAudio","endAudio","incomingAudio","ringingAudio","join","allowTalk","leave","connecting","incoming","end","connect","busy","ringing","fetchGroupCall","call","isLoaded","requestGroupCallParticipants","nextOffset","isCallPanelVisible","subscribed","requestMasterAndJoinGroupCall","hasPublicUsername","inviteLink","canSelfUnmute","key","full","requestMasterAndCallAction","phoneCall","toggleGroupCallPanel","createAudioElement","checkNavigatorUserMediaPermissions","groupCalls","activeGroupCallId","leaveGroupCall","rejoin","doPlay","isVideo","state","participantId","adminId","createAudioContext","AudioContext","webkitAudioContext","silence","ctx","oscillator","createOscillator","dst","createMediaStreamDestination","MediaStream","assign","stream","getAudioTracks","enabled","srcObject","getGroupCallAudioElement","getGroupCallAudioContext","removeGroupCallAudioElement","navigator","mediaDevices","getUserMedia","video","getVideoTracks","getTracks","track","stop","checkMicrophonePermission","catch","audio","groupCallId","groupCallUpdate","addToParticipantCount","resetParticipantCount","unfiltered","participants","filtered","isLeft","removeGroupCall","updateActiveGroupCall","updateGroupCallParticipant","participantUpdate","noUpdateCount"],"sourceRoot":""}